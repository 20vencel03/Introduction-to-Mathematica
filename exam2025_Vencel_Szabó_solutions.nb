(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    213120,       4199]
NotebookOptionsPosition[    210453,       4148]
NotebookOutlinePosition[    210852,       4164]
CellTagsIndexPosition[    210809,       4161]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Introduction to Mathematica SS 2025.", "Title",
 CellChangeTimes->{{3.899196904994172*^9, 3.899196919449005*^9}, {
  3.9608733380783157`*^9, 
  3.9608733383503933`*^9}},ExpressionUUID->"4b6e0e64-7686-4179-b65e-\
112f36226deb"],

Cell[TextData[StyleBox["Solve the following three exercises. Write short \
comments to illustrate the main steps in the code.\n\nVencel Szab\[OAcute], \
pg343, Introduction to Mathematica exam solutions.", "Subtitle"]], "Text",
 CellChangeTimes->{{3.899197359283943*^9, 3.8991974118311377`*^9}, 
   3.960873334136594*^9, {3.961033550796196*^9, 3.961033577177348*^9}, {
   3.9612679292497845`*^9, 
   3.961267952329899*^9}},ExpressionUUID->"4651040e-0424-4f21-ad23-\
9be99aa84d59"],

Cell[CellGroupData[{

Cell["Exercise 1. A Wimbledon simulation.", "Section",
 CellChangeTimes->{{3.899196815496325*^9, 3.899196825855179*^9}, {
  3.8991974515821743`*^9, 3.899197456021983*^9}, {3.9608689301323023`*^9, 
  3.960868936589466*^9}},ExpressionUUID->"e1e40ff8-d40a-4b2c-885e-\
91fc55dff3e5"],

Cell[TextData[{
 "In tennis, a player wins a game if s/he has at least four points ",
 StyleBox["and",
  FontWeight->"Bold"],
 " two points more than the opponent. For instance, if the first score refers \
to player A who is serving and the second to the opponent, at 3-0 the game \
continues; at 4-1, player A wins; at 5-4 the game continues; at 6-4 player A \
wins, etc. Imagine now player A is serving, and s/he scores a point with \
probability ",
 StyleBox["x",
  FontWeight->"Bold"],
 " when s/he is serving (i.e. makes a point ",
 StyleBox["100*x%",
  FontWeight->"Bold"],
 " of times). Realize many (eg 1000) random simulations of a game, and \
estimate the probability  ",
 StyleBox["p(x) ",
  FontWeight->"Bold"],
 "for player A to win",
 " as a function of ",
 StyleBox["x",
  FontWeight->"Bold"],
 ". Draw a plot of ",
 StyleBox["p(x)",
  FontWeight->"Bold"],
 " for ",
 StyleBox["x",
  FontWeight->"Bold"],
 " between 0 and 1."
}], "Text",
 CellChangeTimes->{{3.8983122072580748`*^9, 3.898312402921117*^9}, {
   3.8983124480077877`*^9, 3.898312571603508*^9}, {3.8983127412612057`*^9, 
   3.898312749404428*^9}, {3.9608689401498413`*^9, 3.960869181454842*^9}, {
   3.960869224606081*^9, 3.9608692256047173`*^9}, 3.960880128447167*^9, {
   3.961033620346197*^9, 3.961033660933803*^9}, 3.9610336937755404`*^9},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"334fc778-5318-4979-93b7-08d42a8797a6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "This", " ", "function", " ", "returns", " ", "1", " ", "if", " ", 
     "player", " ", "A", " ", "wins"}], ",", 
    RowBox[{"0", " ", "if", " ", "player", " ", "B", " ", "wins"}]}], "*)"}], 
  
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"simulateGame", "[", "x_", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"a", "=", "0"}], ",", 
         RowBox[{"b", "=", "0"}]}], "}"}], ",", 
       RowBox[{"While", "[", 
        RowBox[{"True", ",", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{
           "A", " ", "scores", " ", "with", " ", "probability", " ", "x"}], ",", 
           RowBox[{"otherwise", " ", "B", " ", "scores"}]}], "*)"}], 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"RandomReal", "[", "]"}], "<", "x"}], ",", 
            RowBox[{"a", "++"}], ",", 
            RowBox[{"b", "++"}]}], "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{"Check", " ", "for", " ", "A", " ", 
            RowBox[{"winning", ":", 
             RowBox[{
              RowBox[{
              "at", " ", "least", " ", "4", " ", "points", " ", "with", " ", 
               "a", " ", "2"}], "-", 
              RowBox[{"point", " ", "margin"}]}]}]}], "*)"}], 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"a", ">=", "4"}], "&&", 
             RowBox[{
              RowBox[{"a", "-", "b"}], ">=", "2"}]}], ",", 
            RowBox[{"Return", "[", "1", "]"}]}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{"Check", " ", "for", " ", "B", " ", 
            RowBox[{"winning", ":", 
             RowBox[{
              RowBox[{
              "at", " ", "least", " ", "4", " ", "points", " ", "with", " ", 
               "a", "  ", "2"}], "-", 
              RowBox[{"point", " ", "margin"}]}]}]}], "*)"}], 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"b", ">=", "4"}], "&&", 
             RowBox[{
              RowBox[{"b", "-", "a"}], ">=", "2"}]}], ",", 
            RowBox[{"Return", "[", "0", "]"}]}], "]"}], ";"}]}], "]"}]}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"Estimate", " ", "p", 
     RowBox[{"(", "x", ")"}], " ", "via", " ", "Monte", " ", "Carlo", " ", 
     "with", " ", "n", " ", "simulations"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"pEstimate", "[", 
      RowBox[{"x_", ",", 
       RowBox[{"n_", ":", "1000"}]}], "]"}], ":=", 
     RowBox[{"N", "[", 
      RowBox[{"Mean", "@", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"simulateGame", "[", "x", "]"}], ",", 
         RowBox[{"{", "n", "}"}]}], "]"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Generate", " ", "data", " ", "points", " ", "for", " ", "x", " ", "from",
      " ", "0", " ", "to", " ", "1", " ", "in", " ", "steps", " ", "of", " ", 
     "0.01"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"nSims", "=", "1000"}], ";"}], "                     ", 
   RowBox[{"(*", 
    RowBox[{"Number", " ", "of", " ", "simulations", " ", "per", " ", "x"}], 
    "*)"}], "\n", 
   RowBox[{
    RowBox[{"step", "=", "0.01"}], ";"}], "                      ", 
   RowBox[{"(*", 
    RowBox[{
    "The", " ", "step", " ", "size", " ", "for", " ", "calculating", " ", "p", 
     RowBox[{"(", "x", ")"}]}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"data", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{"pEstimate", "[", 
          RowBox[{"x", ",", "nSims"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "0", ",", "1", ",", "step"}], "}"}]}], "]"}]}], 
    ";"}], "\n", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Plot", " ", "p", 
     RowBox[{"(", "x", ")"}], " ", "as", " ", "a", " ", "function", " ", "of",
      " ", "x"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{"data", ",", 
     RowBox[{"AxesLabel", "->", 
      RowBox[{"{", 
       RowBox[{"\"\<x (server\[CloseCurlyQuote]s point probability)\>\"", 
        ",", "\"\<p(x) (probability A wins)\>\""}], "}"}]}], ",", 
     RowBox[{
     "PlotLabel", 
      "->", "\"\<Winning Probability p(x) vs. Server A winning point \
probability x\>\""}], ",", 
     RowBox[{"LabelStyle", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"FontFamily", "->", "\"\<Helvetica\>\""}], ",", 
        RowBox[{"FontSize", "->", "14"}], ",", "Bold"}], "}"}]}], ",", 
     RowBox[{"PlotRange", "->", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}]}], ",", 
     RowBox[{"InterpolationOrder", "->", "2"}], ",", 
     RowBox[{"GridLines", "->", "Automatic"}], ",", 
     RowBox[{"PlotMarkers", "->", 
      RowBox[{"{", 
       RowBox[{"Automatic", ",", "8"}], "}"}]}], ",", 
     RowBox[{"ImageSize", "->", "Large"}]}], "]"}], "\n", "\n"}]}]], "Input",
 TaggingRules-><|
  "ExternalEvaluateData" -> <|
    "System" -> "SQLite", "ID" -> "DefaultSQLiteSession"|>|>,
 CellEvaluationLanguage->"SQLite",
 CellChangeTimes->{{3.961182644189951*^9, 3.9611826652834644`*^9}, {
   3.9611830420741653`*^9, 3.9611831082846985`*^9}, {3.9611844059646435`*^9, 
   3.9611844369637337`*^9}, 3.9611844724785786`*^9, {3.961184527508753*^9, 
   3.961184537907669*^9}, {3.961268463209366*^9, 3.961268520137993*^9}},
 CellLabel->"In[74]:=",ExpressionUUID->"853b56c7-e3e7-4b4a-9f40-fad211508f43"],

Cell[BoxData[
 GraphicsBox[{{}, 
   InterpretationBox[{
     TagBox[{{{}, {}, 
        TagBox[
         {RGBColor[0.24, 0.6, 0.8], PointSize[
           NCache[
            Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[2], 
          LineBox[CompressedData["
1:eJxTTMoPSmViYGAQB2IQXSOyzv1hVYs9AxQUFCSFcVW22idkhb1R/L3K7pXE
zJ+spW32Ajz7zBNn7LF7zhtkeCWv3T7CKSbJYsUxuxz/3r8laR32df695+5f
Om9XdNcr7kV0p/0hMcsC4WdX7P5t7wrW8++yN8hjPcPmdcuO777PXTeHbnv2
66F/l3A9sFsUNPG3oX6Pvc5r0bp3yo/t9gpFrHsv3Wvf8dnpxf2CZ3Zx8gu/
1rP12Wt/uGNd+fGlXXVFzsVH7/rsnzx4XLFr6Vu7nz7qJ+Ou9du/TGm2d8n7
YHc+Vd5INn6CvWf4L7GUoo925lWRF60uT7Cfc/zaIZv7H+22PnZ06nCfaP9g
q4TzuS0f7dwX3Whh3TPRXkzpwHSJzx/s3m+VnbnJYJJ9jcSsRnOT93ar5QTr
+5dOsl/5oq5mffBru7o7m8zmSE2237dFT2GmyzO7tPdMB270T7bfUbMy5wvb
A7uUcEZpV9Yp9iqN9w43mV60qwaH7xR4+AIAfr2sMg==
           "]], LineBox[CompressedData["
1:eJxVk30sHAYAxa+j3YqqE1zR+OqmXRiHDlerR85RX3furh01Lb2ijJSiYqrK
tJiqdWuqVlb36dyHaVETpT3nq13NMOqKxnUR6uvGbStbqLEsS/aSl5df3n8v
ebacFFbcWwQCAZveyharK/PMljtb+I/+z2qvS0VVkvvO1Qgz19trdnnNu+Rp
lBtRXI1VTq5w22FDnPmD4+e6mwujbc0vz62SUKudHx4N4uJWdmNk8qgNSk4E
Bn9WyIXd25KaMRt7vON+QWym5EIqejBcoHLA/pz82fp1LiJk57VuG2RMOUcR
aRQeNgyqkqiBB+HN1Ld+lsFD+8rAsdQfPOCpLjM+fZcHeZLJvdbPvTAwMT0/
P89DY0L8Rbs0YI+rj3H6fj6ezDX4fNXoC8unvQt/cfg406fqsKigYkJ88ULB
HT7oz99V1sXTcPzxqYcGY3yEE2/5BlkHoNwx4365qQCSDGefpY4j+HK4KcaW
KYCLjqa9mh4Ef8U+hbxUAE3bUGtEdzBaflX87PlYgGneC3dL+1DMckoru3WE
IDYYus6k0jFqXkhiQ4icxTh5m4iBHJPvAl5mC7EmWR4K5YRhiqXrmNosxFwa
dbdyOgx6I8VdG8tCZDIP6HvFMLF424t4/QMRqmjcnpZ+Jq4J9xrbJooQzZD5
ermyMLfs0NsgFKH9bGCOsoQF3YJEMk0tQosgO5OuYmEifCRUZVmDMI03edKC
jfTUFOvk8BoU0sslGSw2evo8RIQbNfi4K+8Xw0tsPEt2mrzZX4NOxpuxOi4b
/DD2jw56YvQtGd5gfs9GwFGLHUqaGDr9A6Pjj9iYZK9YR+SL8WYXJ9Nps49l
zFlo2sRovas8G/jtZu//2+uCVTE8m7UKxzQ2Qg4ZN5kfrEWWlTZZ9SEbkvcD
WPUpmzyrSAt5xcKqydeDfrJafESKHir+ggXKmtZlbLoWCnHf1WvmLHw6mZie
YieBfuXO6sgKJsoevr6pe1ICk2VTg6XtTNz+ZksSrP+7Lz+Vles0IgHpKmVm
JpKBSqqtX6eRFA+KnCa6+kNRZLxjPjxECnWg8rKrTQhiXxDSF4qkKB78XU1m
BIEsJE7kdUrRbdWz9OiTI1iK97Q33ZAiy8W9aZLmD8F755mSQzLIdtIcru/y
A1Xde+JwpgxZYu2xwQZfqMrJwYP3ZEg0zU3wT/JGdGC9edyiDK/ij5bqO1Kg
WqE+WT0gxzlqAkkrdkN5mV5yaawcJ0PLjGqbHbHwp5WJDVcO/z3rrWZX9uE5
Jb+jcVwO6U+UqJhMEk7RXTICSHUw0zSLB09vR56Hs+M4qw6KmanK8Ypebw0v
Qko4Xvffv/8GIM7PoA==
           "]], LineBox[CompressedData["
1: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
o13Cz5PaO2FHvESGix+GjXB+14n9xEtkYLTZ9oNfOnGYeIkMqys25HX52QlH
4iUyqI+1MNX604kjxEtk6Ep14xWOEy+RofEkqh2Ya2fiJTIkeqiWnPzbqfj/
DmTw1LghVfvdifPES2SwtgyZaP+9ExeIl8igPW29x9pPnYp+qAw9rgb3qXrd
CW/iJTLUurjEfpB1Kt5vliGkbxeX2KZO+BMvkeHA9DGHBnE7EUy8RIY5LdVu
ygWduEe8RIZvU6ekhiV34gHxEsbXXhqlbRjRiVDiJYwPPRU1dNv9TjwjXiLD
/L+yTU3+nYgkXiJD91FZP8uvdSKWeIkMzwuW9Jjr0Yl44iUyLPi/nu48rqfs
/wO4daxhzCD7TiFLYwnxMhhbJJJsE0Z2ZQ9fNBTZt5F9qxjZyb5LQtYJ2bPX
3e89lMlufu/77j5+f74fH30+93P28/y8z1F40KSC4TpOsZdkYsuzyh26ztBx
nr0kEy87RUz7NlVHEntJJvJ1XFSyxhQdV9hLKL7vWezEZN0590bl+ck+QK/j
KntJJlYfDvHwnKbjJntJJtz+++7vOlNHKntJJja/8HweSu3rPntJJkz/Ijeb
LdDxiL0kE+UGRVQOWaE757kzUevjlrs/b9Dxkr0kE8XcBukNdujIYC/JRKp+
duSxQzoUns4zMaVDYucD53XHSzLxpeGIJeVu6xDOPr7PgQOe757r+Df3AA62
rDw28kdqXx/ZSzJxf8faPr7UPr6wl1D70Xt9ii9pIE+cvcHMRN1hckCVKgYK
sJdkoq1L4JiE+gYKsZdI6KLGNB/qZcCFvUSC34fk0x4dDZRiL5HQvsWlnLI9
DZRhL5HQYPcmrVJ/A67sJRKK9/Bdiz/odfYSyfEdAxXZSyRsqde+zNOJBqqw
l0gYEByp+E83UJO9RIJL6tbJ6mwDddhLJBwLiT6+KcJAPfYSep42wQljogw0
ZC+R8LptieC+iww0YS+REDzpr9tBSww0Zy+R8Pzh27eRSw20Yi+R4Dve/cZl
inPv55Fw2Mv791oUt2cvkVC4qXv8tsUGOrGXSCg3NjNeXWigK3sJ7dPl4UFH
FxjwZS+REL97z/X/6Hl6sZdIqJtwxLhBcR/2EgnVvs9JdqV/P4C9REL0ytK9
JYp/Zy+REDFq1Jqm9PxD2UskqPMjluen5x/OGy4JN5UhbfyXGRjDXiLBfVX+
uJorDTCXjJCc+x8MjGMvkeBzeM3STusM57y+hLL155fesMnAZPYSCYNUL99x
MQams5dIqGQeQuLfhnM/iISA5qYUvddwzvdLKHrZ7KAlGIhkL5HQfMPhvokn
DUSxl0h4cbh11XKJBpYycEgoUHrRFuuqgZXsJRLijm+80ynVQDR7iYSTMRPO
VH1sYD17iYQbE1q5VXxtYBN7iYSgq3Uzn2gGYthLJIzf4ZUVlG1gO3uJhO+F
QnrGfzGwi71EQsms5K9H8pvYx14iYdsf7T7PK2biEHuJhD39X3Su8JOJo+wl
ErwexmZOrmDiBHsJteenC+6tqm7iLHsJlffwVT9OcTOddYOEa/z7PL3OXiLB
v0TJ8PnNTCSyl1D7bRC572hrE8m8AaHySK1Qf9evJlLYSyRIX+5/GtzZxA32
Egmj9x91Te9uIpW9REJo5vEFlXqbjpdIyNqe3ql6oIlH7CUSspXafbWBJtLZ
SyRMOvrXsWlDTOe+Jop/qDn8WrCJDPYSCe+ePwh+McqEzMsDCVWt3VbqOBMG
e4mEphnrvI9NMPGWN/wS6l2M8V06xcS/7CVUf/OTa/WdbuIje4mEC43yXyg9
y8RX9hIJv18cVDnpTxP/sZdIeNnyDoIjTRRgL5Hw24YhdT5FmfiBvUTG8hdF
78xZbKIoe4mM08VT8WWZiSK8gZORe72RCR6uXGQcq7h3dEq0CR7uf5Sx+Fti
rYrrTfB0WUZGhyvvtg/ZZDrnM2Q8n9pGXr/VBC/XKskYWHyHdSnWRA32EhkX
FtU+/WqHiTrsJTIKWBe7ZsWbqMdeIqN+yxlb/t1jwoO9REazsT7H9P2mcz+E
jJrzvFalHTKd86YysiPbNTl0xERL9hIZzaVfyk45bjpeIiOszpvEMqdMtGcv
kXGio2+TNWdM/MZeIuNDu6kjs86Z6MZeQp9Xsd8wj0QTPdhLZEy6l1OrU5KJ
XrxClXFwdK993skmAthLZBjPRn4qdcXEAPYSGXUatyp+6aqJIPYSGUOGpGT0
vmY6+Q8y1oWWjky8boK3v4Nl3B7gKhe7aTr3a8koVPtJqWa3TIxgL5HR+lZg
Hu/bJrg6xtLz+K86Vu0fE+PZS2TsPBHV+A3FU9hLZDz51GJiZKrp3Kcjw6XC
39Py3jExi71ERjvX2x1+p3gOe4mMCe8P319L8Tz2EhmxB/w9DlC8kL1ERmqn
Q922U7yEvUTG0eDU9YkUr2AvkVH40JkIv7sm1rCXyLjiNqmw/z0TG9hLZLy7
ne2ekmZiE3uJjKi4dvLBByZi2EtkLNrer13Rx6bjJTI+3mnd7OFTE/HsJTLu
e2iXy74wsZe9REaVE8OyUl6bOMheIuNuyK7TpmQ651tk8GPrJvi6ygQZ04et
rrLirQleXh2j8otrebpYjglenp6S8aDE3nefv5g4z14iI36XnDwon4Uk9hIZ
8njxS5MilnP/h4yVwUltp5eycJO9RMaeqCGZTVwt3GYvofb74FrdoGoW7rCX
yKjg/73gNzcLD9hLZEz79u3PEp4WnrCXyGh7P2XNX60tPOMNuoyqM+YrXzpa
eMNeIuPGggHlz/WwIHODoX+ft4vbgwALKi83ZEzN7FGm8+8WBHuJjBlNx70s
GWzhHXuJjF+tuEWNx1i0j7B7MJVX6axSu8db+MxeIsMjrn/YjCkWvrOXyPDd
/PhU7HQL+ezrfb/K8Mo76Wn1WZaTX6Igw07fCbec/BIFg4sZJ93nWk5+iYK4
Q7emJERY4O5bTMG+xKslVkVaTn6Jgjmtn0SlUJybX6KgfPWCzwIpzvUSBbMn
dvkR9Pe59yspiG+wo2b4HMvJL1Gwsbfrz2Xo83PzSxT0ebPjdf6ZlpNfouDh
864ruk2zUJ+9REGN3wpVUCdZaMxeoqDuqHNBU0MtJ79EweMN3VvOp/LJvf9N
QasnR3e7jrTgzV6ioJN7zsFGVJ5gL1GQd0Gp7teHWo6XKBiVnT9cGWw5+SUK
wkNTf1scZKE7e4mCth+nbj9I9ePLXkLlsfL92n4U5+aXKEhp0b3afIpz80sU
rLSvL6G/5+V4gIL8h6Pej6L3H8BeosBt/mhUo88PYi9RkDOidrWBwyz8wV6i
YErg6bXlR1gYwV6iYEtft+0DR1sYy16iICx4/G/VQyyEsJco+DBnxewxEy0n
v4Tef99CnxZhlpNfoqCANODgAirf3PwSer6GP+weSPUdzl5Czz9/sdeRBRYi
2UsUTCy2KMp7uYUo9hIFXV7Enfk72sIy3vAr6JX30UNro4UV7CUKFk50e1ou
1kI0e4mCrEbRl6vFW1jPXqJgqXfFdUX2W9jIXqIgcN25nncPW9jKXqKgd7uZ
4n8nLWxnL1Ewt0WfsPznLcSzlyh4PqtLxthL1v+77x+l+rU8mmJhN3uJgupZ
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
qtyjODe/xHQc+C3+D+WyTvM=
           "]], LineBox[CompressedData["
1:eJw9kg0sFGAYx49Sx+oyK0e+QgtDR1u7FuexYqySG8X52sVNPibOxpQ2aqjL
0E0+GyVk0q0rRM1G52tLEqFTuUZJSs+9yPdnL2s927t3v70fe57//28eFucT
rslgMA7TtblH8XSUFWIExlZNQfw/3tgqAqcsHdkhCQgm1p9PxlO+d+u8v/5l
hJZFFef9OoEIcVLhu6sIY/HMdgvK1coCpSQVIftOIEO0RkDYUsc+kYbQEDIw
lrtKQGrV479yA+Fib2J87QoBru54YX0mQvGkS5VimYDgyoryUg4CX85Je7VE
QB3GMrDKRZAYeTLliwRWu00FI/kI7g6So9kLBDIa7YqKi+k5Ep2geQIaNa5D
PqUIvmPFWpw5Aou2IoNdDxCePywrN5ul/fLyBB2VCDLH7V/t/hDw/tJflFKN
cEzS3uY3Q0DGsvjIlSH4Pxr1KJ0mkN6TYjgtR2DlB8UyKA+Y/AqoqUMQnD7C
vTZFoHRVdFfUSN93h5cbUx6J/v3JuAlBzp6XDxICBZFpRh+a6fz234SPKbfN
WQffbkXwY9nXllKO0VOVeHYiZL7sr5JRljbfV2l0IZzjKHlDlG2WxaZNbxGe
xXGTDtD/eR18YUIfQmXyrE8G5U4zKLMfRLDjs/p20P5eazuPjg8heE6lT1dS
9kzzsCgbRlgLFNQL6XzHs0JFASMIblKJIZfOX3Uws1JvDMFUus/cluqTdUbx
/c0PBGngRpcT1W9i206rjEmEAuLOjqL6BufZRLoQhFCHEK8Sqr/EY6F6YQZh
//qL+mbqT5SJ+OfTeYQOQYBXL/WPoZ9nE71M77u6sPuov3xHUZTlOgKpj9BT
UP9941TVwxpqiGkYdCmj+djTqzmRr6WGYTdJSSzNz3Xf/kPe2mpwvpBqa7eZ
r6Wz4czdashhNk0OUb7Zmlih0FVDL89JlUDzyXziMZq8V/0/z38Bh1yQCQ==

           "]], LineBox[CompressedData["
1:eJxTTMoPSmViYGAQB2IQnQYG7+wZwOCDveSUBdvks97Zv6lnYX79/709d9JJ
jpu57+xVcl1e3ADy7S48iJlU+M5+9fH9608C+VvuPdvkXfrOvqa/LHIvkJ/e
e5uLtfKd/fQjGU83A/lxd/al7Kt5Z/8/bVrwWiB/yukJB8ob3tlvKvu/eCWQ
zxMdKGfY8s5+4+fF11YA+ce6GOpetb+z/3u3+fUqIP9A1Lz7i7vf2U81nf9o
PZD/65SWc2z/O/uyX193bwfyzSR5F4lNfme/6Lno8QMgfvOar+envbOX3NET
DHLfXw5Ou85Z7+yvZ0clXgTyW1cpVTvNe2d/l6n+A8g/V9J/rvm98J29Xu0v
hgdA/guH3stblr6zP3brzKRnQP5e03vvcle+s18m/W3pGyA/zO3NP7W17+zP
25dZfQLytxZtZ36w4Z29o7tvwHcg/8Yu+78ztgDdb1j9/DeQv0Ou9XXgDkT4
AgAxXtbL
           "]], LineBox[CompressedData["
1:eJxTTMoPSmViYGAQB2IQzXV9cYEt13t7BjD4YF/hbX7hB+97e4+Iq4n//7+3
56rMLdwi+N5+4vvUm/+A/EPxbiEFou/tbxzdmAbiL/p/sEJH8r290u0dnCD+
sogH917IvLfP0q8+9BfIv5S1sG2pwnv7TYd+TADxlc1YC5JU3tv/mmJYCuLP
2sU9W17jvb3zMtV8EN/sxxb2u9rv7bu/XakD8X+9Y9g2S/+9/ZVW+yUg/pN5
75dGGL+3lwlJvQ/ic3/K+C5q/t7ebnK3Msj+7kshpy5avbeXLv2eDOInOWyW
67F7b7/m54oFIP5E65YvLk7v7b8rLAD7R/TIce8/ru/tv726wwfy78ebtSqb
PN/brwuPdwDx1WqX1aX5vreXS1fPA/E3rnWMkgwEulfSdAaIPzXbf/upkPf2
inkd+0D8s9vOT62KeG+/NVXxIYgf3X/oq0YMInwB7trPSw==
           "]], LineBox[CompressedData["
1:eJxTTMoPSmViYGAQB2IQvd79YZXIuvf2DGDwwf4N/6kropve26+wDPz9//97
+1/nEp7Ib3tvz5ri+h3Ev9SydKXRrvf2ovV3PoP4lYYzVPz2vbe/0yX2EcT/
cMUitOjQe/vw9s/vQHyT/Hbr+cfe23eUFL8F8V0YWq5fOfXePi9o2hsQX61D
T1P4/Ht7LsUYMP8KW7tB1OX39pEPjoD5/jW9b1def28fN+ECWP+MF44JTHfe
20sY1r8H8Y1Vuc64Pnhvv3FZMdj+Rdw+JWFP3tuHXg0Au+/lbPZIkxdA9+8V
+wriM1+zqbr/+r39/tij38Du3fn6evj79/bN22N+gPhb3UWK5n56bx906s5P
EN+vfpvHhq/v7XWnuYLDY0/CpegJP97bC0lP/wPi/3+dvtr293t7xsiLf0F8
ccVy8x1/39v/9v/yD8RnhIYrLHwBLy/Zgg==
           "]]},
         Annotation[#, "Charting`Private`Tag#1"]& ]}, 
       TagBox[
        {RGBColor[0.24, 0.6, 0.8], PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[2], 
         GeometricTransformationBox[InsetBox[
           FormBox[
            StyleBox[
             GraphicsBox[
              {EdgeForm[None], DiskBox[{0, 0}]},
              PlotRangePadding->Scaled[0.15]],
             StripOnInput->False,
             GraphicsBoxOptions->{DefaultBaseStyle->Directive[
               PointSize[
                Rational[1, 72]], 
               RGBColor[0.24, 0.6, 0.8], 
               AbsoluteThickness[2]]}],
            TraditionalForm], {0., 0.}, Automatic, Offset[8]], CompressedData["
1:eJxlkwlIVFEUhs1EQiIiLMTKFloMEYmICKmfEqmIKA0iRERES0TKQkIsJCmR
kjIxyzajtMUQsTCXEDF3Rc21cdfRGcdxZnwtWLRB7973+4bswmPmvPvuOf/5
v3M3RJ0NjVns4uISoz6L1MfV5f910bP4gDH5Kv6Nb+txhU+aLaQib8F+AX4X
fu4+EnUM9++JVajH2vfF+vf2EPHmNfcjoZ0v1b/3MOQn7PEoX5CvEj9T4qoS
s2OxLTyzds63Sj+v5a/W4wL1tCG/hnECtHrvGV/GDrnqeO4m69czfxLq5nzV
Cg3YXdp8ofrxdeppwrwvofJgMx7Wry85H5tFfS2Y98mYLP60Iiw6cOzojbvU
28b8uTgn5CW0492hpa5+6c+po4PfFdGnTli3bF9StOYV++lEbJbjEnYW46As
0MV+SthfF3W/hcgSntmNN4+UF42Hy9lvD/ZHmjs3DlVCtmPoYZ0a6u5Ftpfb
iWX+tVgn5Pj0MU8t8/Zhq5ATVo/Tp8T6CNGNl1sj/TGgL0koboPI5llsQJ4o
v6uFfvWjRXXTO6Ad30S6uX5sdk/NCcpoo38DuBOUEW/51YW9MuGg3ofm5yA+
fD8++exBL6S8tCFIOdE99G0Ya6XhfWhvE2sYT4PLvv7p7affI+Q5iJVS4Cj9
GKD/o9Q3ApkufAxy+8cofRqHPO49xn7G0SDxG8lnHKsDRja5pxrZ3zj9mSAv
I/0zsV8jXqruXNtnIj8jutRqKXEm9j/B92b6MEH9U/RjAldqWp8El1nId5L6
LPRnkrqmyXsSTaJcpJV+mfBFnZ7lJ63k74w1/0z0ZYbzYGZ+G/000xc758MM
ob4q0UZ/p9iPnfMyxfm3M+8U/XZwfiz000H/Lcg9s0Jt0cF5stAPB+tOQ+JJ
mSWPacjrETGr9602o1o2Sx7T1K+QhxUR8gIq5GGFoJcTpLCOlfOlkMcMJN4c
BbckjxkMdIiBVMjDua/xsMFfXkCFPGzkoPDXBjH98RaFPOzwS1+lplTIww5R
PXBMIQ/nvsZj3odP5OGMNR4OqJdZVaCQx6y+r/FwxhoPZ6zxUPRY4+GMNR7O
eOHvX0Jh/dM=
          "]]},
        Annotation[#, "Charting`Private`Tag#1"]& ]},
      {"WolframDynamicHighlight", <|
       "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
     StyleBox[
      DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
        Slot["HighlightElements"], 
        Slot["LayoutOptions"], 
        Slot["Meta"], 
        Charting`HighlightActionFunction["DynamicHighlight", {{{}, {}, 
           Annotation[{
             Hue[0.67, 0.6, 0.6], 
             Directive[
              PointSize[
               Rational[1, 72]], 
              RGBColor[0.24, 0.6, 0.8], 
              AbsoluteThickness[2]], 
             Line[CompressedData["
1:eJxTTMoPSmViYGAQB2IQXSOyzv1hVYs9AxQUFCSFcVW22idkhb1R/L3K7pXE
zJ+spW32Ajz7zBNn7LF7zhtkeCWv3T7CKSbJYsUxuxz/3r8laR32df695+5f
Om9XdNcr7kV0p/0hMcsC4WdX7P5t7wrW8++yN8hjPcPmdcuO777PXTeHbnv2
66F/l3A9sFsUNPG3oX6Pvc5r0bp3yo/t9gpFrHsv3Wvf8dnpxf2CZ3Zx8gu/
1rP12Wt/uGNd+fGlXXVFzsVH7/rsnzx4XLFr6Vu7nz7qJ+Ou9du/TGm2d8n7
YHc+Vd5INn6CvWf4L7GUoo925lWRF60uT7Cfc/zaIZv7H+22PnZ06nCfaP9g
q4TzuS0f7dwX3Whh3TPRXkzpwHSJzx/s3m+VnbnJYJJ9jcSsRnOT93ar5QTr
+5dOsl/5oq5mffBru7o7m8zmSE2237dFT2GmyzO7tPdMB270T7bfUbMy5wvb
A7uUcEZpV9Yp9iqN9w43mV60qwaH7xR4+AIAfr2sMg==
              "]], 
             Line[CompressedData["
1:eJxVk30sHAYAxa+j3YqqE1zR+OqmXRiHDlerR85RX3furh01Lb2ijJSiYqrK
tJiqdWuqVlb36dyHaVETpT3nq13NMOqKxnUR6uvGbStbqLEsS/aSl5df3n8v
ebacFFbcWwQCAZveyharK/PMljtb+I/+z2qvS0VVkvvO1Qgz19trdnnNu+Rp
lBtRXI1VTq5w22FDnPmD4+e6mwujbc0vz62SUKudHx4N4uJWdmNk8qgNSk4E
Bn9WyIXd25KaMRt7vON+QWym5EIqejBcoHLA/pz82fp1LiJk57VuG2RMOUcR
aRQeNgyqkqiBB+HN1Ld+lsFD+8rAsdQfPOCpLjM+fZcHeZLJvdbPvTAwMT0/
P89DY0L8Rbs0YI+rj3H6fj6ezDX4fNXoC8unvQt/cfg406fqsKigYkJ88ULB
HT7oz99V1sXTcPzxqYcGY3yEE2/5BlkHoNwx4365qQCSDGefpY4j+HK4KcaW
KYCLjqa9mh4Ef8U+hbxUAE3bUGtEdzBaflX87PlYgGneC3dL+1DMckoru3WE
IDYYus6k0jFqXkhiQ4icxTh5m4iBHJPvAl5mC7EmWR4K5YRhiqXrmNosxFwa
dbdyOgx6I8VdG8tCZDIP6HvFMLF424t4/QMRqmjcnpZ+Jq4J9xrbJooQzZD5
ermyMLfs0NsgFKH9bGCOsoQF3YJEMk0tQosgO5OuYmEifCRUZVmDMI03edKC
jfTUFOvk8BoU0sslGSw2evo8RIQbNfi4K+8Xw0tsPEt2mrzZX4NOxpuxOi4b
/DD2jw56YvQtGd5gfs9GwFGLHUqaGDr9A6Pjj9iYZK9YR+SL8WYXJ9Nps49l
zFlo2sRovas8G/jtZu//2+uCVTE8m7UKxzQ2Qg4ZN5kfrEWWlTZZ9SEbkvcD
WPUpmzyrSAt5xcKqydeDfrJafESKHir+ggXKmtZlbLoWCnHf1WvmLHw6mZie
YieBfuXO6sgKJsoevr6pe1ICk2VTg6XtTNz+ZksSrP+7Lz+Vles0IgHpKmVm
JpKBSqqtX6eRFA+KnCa6+kNRZLxjPjxECnWg8rKrTQhiXxDSF4qkKB78XU1m
BIEsJE7kdUrRbdWz9OiTI1iK97Q33ZAiy8W9aZLmD8F755mSQzLIdtIcru/y
A1Xde+JwpgxZYu2xwQZfqMrJwYP3ZEg0zU3wT/JGdGC9edyiDK/ij5bqO1Kg
WqE+WT0gxzlqAkkrdkN5mV5yaawcJ0PLjGqbHbHwp5WJDVcO/z3rrWZX9uE5
Jb+jcVwO6U+UqJhMEk7RXTICSHUw0zSLB09vR56Hs+M4qw6KmanK8Ypebw0v
Qko4Xvffv/8GIM7PoA==
              "]], 
             Line[CompressedData["
1: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
o13Cz5PaO2FHvESGix+GjXB+14n9xEtkYLTZ9oNfOnGYeIkMqys25HX52QlH
4iUyqI+1MNX604kjxEtk6Ep14xWOEy+RofEkqh2Ya2fiJTIkeqiWnPzbqfj/
DmTw1LghVfvdifPES2SwtgyZaP+9ExeIl8igPW29x9pPnYp+qAw9rgb3qXrd
CW/iJTLUurjEfpB1Kt5vliGkbxeX2KZO+BMvkeHA9DGHBnE7EUy8RIY5LdVu
ygWduEe8RIZvU6ekhiV34gHxEsbXXhqlbRjRiVDiJYwPPRU1dNv9TjwjXiLD
/L+yTU3+nYgkXiJD91FZP8uvdSKWeIkMzwuW9Jjr0Yl44iUyLPi/nu48rqfs
/wO4daxhzCD7TiFLYwnxMhhbJJJsE0Z2ZQ9fNBTZt5F9qxjZyb5LQtYJ2bPX
3e89lMlufu/77j5+f74fH30+93P28/y8z1F40KSC4TpOsZdkYsuzyh26ztBx
nr0kEy87RUz7NlVHEntJJvJ1XFSyxhQdV9hLKL7vWezEZN0590bl+ck+QK/j
KntJJlYfDvHwnKbjJntJJtz+++7vOlNHKntJJja/8HweSu3rPntJJkz/Ijeb
LdDxiL0kE+UGRVQOWaE757kzUevjlrs/b9Dxkr0kE8XcBukNdujIYC/JRKp+
duSxQzoUns4zMaVDYucD53XHSzLxpeGIJeVu6xDOPr7PgQOe757r+Df3AA62
rDw28kdqXx/ZSzJxf8faPr7UPr6wl1D70Xt9ii9pIE+cvcHMRN1hckCVKgYK
sJdkoq1L4JiE+gYKsZdI6KLGNB/qZcCFvUSC34fk0x4dDZRiL5HQvsWlnLI9
DZRhL5HQYPcmrVJ/A67sJRKK9/Bdiz/odfYSyfEdAxXZSyRsqde+zNOJBqqw
l0gYEByp+E83UJO9RIJL6tbJ6mwDddhLJBwLiT6+KcJAPfYSep42wQljogw0
ZC+R8LptieC+iww0YS+REDzpr9tBSww0Zy+R8Pzh27eRSw20Yi+R4Dve/cZl
inPv55Fw2Mv791oUt2cvkVC4qXv8tsUGOrGXSCg3NjNeXWigK3sJ7dPl4UFH
FxjwZS+REL97z/X/6Hl6sZdIqJtwxLhBcR/2EgnVvs9JdqV/P4C9REL0ytK9
JYp/Zy+REDFq1Jqm9PxD2UskqPMjluen5x/OGy4JN5UhbfyXGRjDXiLBfVX+
uJorDTCXjJCc+x8MjGMvkeBzeM3STusM57y+hLL155fesMnAZPYSCYNUL99x
MQams5dIqGQeQuLfhnM/iISA5qYUvddwzvdLKHrZ7KAlGIhkL5HQfMPhvokn
DUSxl0h4cbh11XKJBpYycEgoUHrRFuuqgZXsJRLijm+80ynVQDR7iYSTMRPO
VH1sYD17iYQbE1q5VXxtYBN7iYSgq3Uzn2gGYthLJIzf4ZUVlG1gO3uJhO+F
QnrGfzGwi71EQsms5K9H8pvYx14iYdsf7T7PK2biEHuJhD39X3Su8JOJo+wl
ErwexmZOrmDiBHsJteenC+6tqm7iLHsJlffwVT9OcTOddYOEa/z7PL3OXiLB
v0TJ8PnNTCSyl1D7bRC572hrE8m8AaHySK1Qf9evJlLYSyRIX+5/GtzZxA32
Egmj9x91Te9uIpW9REJo5vEFlXqbjpdIyNqe3ql6oIlH7CUSspXafbWBJtLZ
SyRMOvrXsWlDTOe+Jop/qDn8WrCJDPYSCe+ePwh+McqEzMsDCVWt3VbqOBMG
e4mEphnrvI9NMPGWN/wS6l2M8V06xcS/7CVUf/OTa/WdbuIje4mEC43yXyg9
y8RX9hIJv18cVDnpTxP/sZdIeNnyDoIjTRRgL5Hw24YhdT5FmfiBvUTG8hdF
78xZbKIoe4mM08VT8WWZiSK8gZORe72RCR6uXGQcq7h3dEq0CR7uf5Sx+Fti
rYrrTfB0WUZGhyvvtg/ZZDrnM2Q8n9pGXr/VBC/XKskYWHyHdSnWRA32EhkX
FtU+/WqHiTrsJTIKWBe7ZsWbqMdeIqN+yxlb/t1jwoO9REazsT7H9P2mcz+E
jJrzvFalHTKd86YysiPbNTl0xERL9hIZzaVfyk45bjpeIiOszpvEMqdMtGcv
kXGio2+TNWdM/MZeIuNDu6kjs86Z6MZeQp9Xsd8wj0QTPdhLZEy6l1OrU5KJ
XrxClXFwdK993skmAthLZBjPRn4qdcXEAPYSGXUatyp+6aqJIPYSGUOGpGT0
vmY6+Q8y1oWWjky8boK3v4Nl3B7gKhe7aTr3a8koVPtJqWa3TIxgL5HR+lZg
Hu/bJrg6xtLz+K86Vu0fE+PZS2TsPBHV+A3FU9hLZDz51GJiZKrp3Kcjw6XC
39Py3jExi71ERjvX2x1+p3gOe4mMCe8P319L8Tz2EhmxB/w9DlC8kL1ERmqn
Q922U7yEvUTG0eDU9YkUr2AvkVH40JkIv7sm1rCXyLjiNqmw/z0TG9hLZLy7
ne2ekmZiE3uJjKi4dvLBByZi2EtkLNrer13Rx6bjJTI+3mnd7OFTE/HsJTLu
e2iXy74wsZe9REaVE8OyUl6bOMheIuNuyK7TpmQ651tk8GPrJvi6ygQZ04et
rrLirQleXh2j8otrebpYjglenp6S8aDE3nefv5g4z14iI36XnDwon4Uk9hIZ
8njxS5MilnP/h4yVwUltp5eycJO9RMaeqCGZTVwt3GYvofb74FrdoGoW7rCX
yKjg/73gNzcLD9hLZEz79u3PEp4WnrCXyGh7P2XNX60tPOMNuoyqM+YrXzpa
eMNeIuPGggHlz/WwIHODoX+ft4vbgwALKi83ZEzN7FGm8+8WBHuJjBlNx70s
GWzhHXuJjF+tuEWNx1i0j7B7MJVX6axSu8db+MxeIsMjrn/YjCkWvrOXyPDd
/PhU7HQL+ezrfb/K8Mo76Wn1WZaTX6Igw07fCbec/BIFg4sZJ93nWk5+iYK4
Q7emJERY4O5bTMG+xKslVkVaTn6Jgjmtn0SlUJybX6KgfPWCzwIpzvUSBbMn
dvkR9Pe59yspiG+wo2b4HMvJL1Gwsbfrz2Xo83PzSxT0ebPjdf6ZlpNfouDh
864ruk2zUJ+9REGN3wpVUCdZaMxeoqDuqHNBU0MtJ79EweMN3VvOp/LJvf9N
QasnR3e7jrTgzV6ioJN7zsFGVJ5gL1GQd0Gp7teHWo6XKBiVnT9cGWw5+SUK
wkNTf1scZKE7e4mCth+nbj9I9ePLXkLlsfL92n4U5+aXKEhp0b3afIpz80sU
rLSvL6G/5+V4gIL8h6Pej6L3H8BeosBt/mhUo88PYi9RkDOidrWBwyz8wV6i
YErg6bXlR1gYwV6iYEtft+0DR1sYy16iICx4/G/VQyyEsJco+DBnxewxEy0n
v4Tef99CnxZhlpNfoqCANODgAirf3PwSer6GP+weSPUdzl5Czz9/sdeRBRYi
2UsUTCy2KMp7uYUo9hIFXV7Enfk72sIy3vAr6JX30UNro4UV7CUKFk50e1ou
1kI0e4mCrEbRl6vFW1jPXqJgqXfFdUX2W9jIXqIgcN25nncPW9jKXqKgd7uZ
4n8nLWxnL1Ewt0WfsPznLcSzlyh4PqtLxthL1v+77x+l+rU8mmJhN3uJgupZ
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
qtyjODe/xHQc+C3+D+WyTvM=
              "]], 
             Line[CompressedData["
1:eJw9kg0sFGAYx49Sx+oyK0e+QgtDR1u7FuexYqySG8X52sVNPibOxpQ2aqjL
0E0+GyVk0q0rRM1G52tLEqFTuUZJSs+9yPdnL2s927t3v70fe57//28eFucT
rslgMA7TtblH8XSUFWIExlZNQfw/3tgqAqcsHdkhCQgm1p9PxlO+d+u8v/5l
hJZFFef9OoEIcVLhu6sIY/HMdgvK1coCpSQVIftOIEO0RkDYUsc+kYbQEDIw
lrtKQGrV479yA+Fib2J87QoBru54YX0mQvGkS5VimYDgyoryUg4CX85Je7VE
QB3GMrDKRZAYeTLliwRWu00FI/kI7g6So9kLBDIa7YqKi+k5Ep2geQIaNa5D
PqUIvmPFWpw5Aou2IoNdDxCePywrN5ul/fLyBB2VCDLH7V/t/hDw/tJflFKN
cEzS3uY3Q0DGsvjIlSH4Pxr1KJ0mkN6TYjgtR2DlB8UyKA+Y/AqoqUMQnD7C
vTZFoHRVdFfUSN93h5cbUx6J/v3JuAlBzp6XDxICBZFpRh+a6fz234SPKbfN
WQffbkXwY9nXllKO0VOVeHYiZL7sr5JRljbfV2l0IZzjKHlDlG2WxaZNbxGe
xXGTDtD/eR18YUIfQmXyrE8G5U4zKLMfRLDjs/p20P5eazuPjg8heE6lT1dS
9kzzsCgbRlgLFNQL6XzHs0JFASMIblKJIZfOX3Uws1JvDMFUus/cluqTdUbx
/c0PBGngRpcT1W9i206rjEmEAuLOjqL6BufZRLoQhFCHEK8Sqr/EY6F6YQZh
//qL+mbqT5SJ+OfTeYQOQYBXL/WPoZ9nE71M77u6sPuov3xHUZTlOgKpj9BT
UP9941TVwxpqiGkYdCmj+djTqzmRr6WGYTdJSSzNz3Xf/kPe2mpwvpBqa7eZ
r6Wz4czdashhNk0OUb7Zmlih0FVDL89JlUDzyXziMZq8V/0/z38Bh1yQCQ==

              "]], 
             Line[CompressedData["
1:eJxTTMoPSmViYGAQB2IQnQYG7+wZwOCDveSUBdvks97Zv6lnYX79/709d9JJ
jpu57+xVcl1e3ADy7S48iJlU+M5+9fH9608C+VvuPdvkXfrOvqa/LHIvkJ/e
e5uLtfKd/fQjGU83A/lxd/al7Kt5Z/8/bVrwWiB/yukJB8ob3tlvKvu/eCWQ
zxMdKGfY8s5+4+fF11YA+ce6GOpetb+z/3u3+fUqIP9A1Lz7i7vf2U81nf9o
PZD/65SWc2z/O/uyX193bwfyzSR5F4lNfme/6Lno8QMgfvOar+envbOX3NET
DHLfXw5Ou85Z7+yvZ0clXgTyW1cpVTvNe2d/l6n+A8g/V9J/rvm98J29Xu0v
hgdA/guH3stblr6zP3brzKRnQP5e03vvcle+s18m/W3pGyA/zO3NP7W17+zP
25dZfQLytxZtZ36w4Z29o7tvwHcg/8Yu+78ztgDdb1j9/DeQv0Ou9XXgDkT4
AgAxXtbL
              "]], 
             Line[CompressedData["
1:eJxTTMoPSmViYGAQB2IQzXV9cYEt13t7BjD4YF/hbX7hB+97e4+Iq4n//7+3
56rMLdwi+N5+4vvUm/+A/EPxbiEFou/tbxzdmAbiL/p/sEJH8r290u0dnCD+
sogH917IvLfP0q8+9BfIv5S1sG2pwnv7TYd+TADxlc1YC5JU3tv/mmJYCuLP
2sU9W17jvb3zMtV8EN/sxxb2u9rv7bu/XakD8X+9Y9g2S/+9/ZVW+yUg/pN5
75dGGL+3lwlJvQ/ic3/K+C5q/t7ebnK3Msj+7kshpy5avbeXLv2eDOInOWyW
67F7b7/m54oFIP5E65YvLk7v7b8rLAD7R/TIce8/ru/tv726wwfy78ebtSqb
PN/brwuPdwDx1WqX1aX5vreXS1fPA/E3rnWMkgwEulfSdAaIPzXbf/upkPf2
inkd+0D8s9vOT62KeG+/NVXxIYgf3X/oq0YMInwB7trPSw==
              "]], 
             Line[CompressedData["
1:eJxTTMoPSmViYGAQB2IQvd79YZXIuvf2DGDwwf4N/6kropve26+wDPz9//97
+1/nEp7Ib3tvz5ri+h3Ev9SydKXRrvf2ovV3PoP4lYYzVPz2vbe/0yX2EcT/
cMUitOjQe/vw9s/vQHyT/Hbr+cfe23eUFL8F8V0YWq5fOfXePi9o2hsQX61D
T1P4/Ht7LsUYMP8KW7tB1OX39pEPjoD5/jW9b1def28fN+ECWP+MF44JTHfe
20sY1r8H8Y1Vuc64Pnhvv3FZMdj+Rdw+JWFP3tuHXg0Au+/lbPZIkxdA9+8V
+wriM1+zqbr/+r39/tij38Du3fn6evj79/bN22N+gPhb3UWK5n56bx906s5P
EN+vfpvHhq/v7XWnuYLDY0/CpegJP97bC0lP/wPi/3+dvtr293t7xsiLf0F8
ccVy8x1/39v/9v/yD8RnhIYrLHwBLy/Zgg==
              "]]}, "Charting`Private`Tag#1"]}, {
           Annotation[{
             Directive[
              PointSize[
               Rational[1, 72]], 
              RGBColor[0.24, 0.6, 0.8], 
              AbsoluteThickness[2]], 
             GeometricTransformation[
              Inset[
               Style[
                Graphics[{
                  EdgeForm[], 
                  Disk[{0, 0}]}, PlotRangePadding -> Scaled[0.15]], 
                GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[
                    Rational[1, 72]], 
                    RGBColor[0.24, 0.6, 0.8], 
                    AbsoluteThickness[2]]}], {0., 0.}, Automatic, 
               Offset[8]], CompressedData["
1:eJxlkwlIVFEUhs1EQiIiLMTKFloMEYmICKmfEqmIKA0iRERES0TKQkIsJCmR
kjIxyzajtMUQsTCXEDF3Rc21cdfRGcdxZnwtWLRB7973+4bswmPmvPvuOf/5
v3M3RJ0NjVns4uISoz6L1MfV5f910bP4gDH5Kv6Nb+txhU+aLaQib8F+AX4X
fu4+EnUM9++JVajH2vfF+vf2EPHmNfcjoZ0v1b/3MOQn7PEoX5CvEj9T4qoS
s2OxLTyzds63Sj+v5a/W4wL1tCG/hnECtHrvGV/GDrnqeO4m69czfxLq5nzV
Cg3YXdp8ofrxdeppwrwvofJgMx7Wry85H5tFfS2Y98mYLP60Iiw6cOzojbvU
28b8uTgn5CW0492hpa5+6c+po4PfFdGnTli3bF9StOYV++lEbJbjEnYW46As
0MV+SthfF3W/hcgSntmNN4+UF42Hy9lvD/ZHmjs3DlVCtmPoYZ0a6u5Ftpfb
iWX+tVgn5Pj0MU8t8/Zhq5ATVo/Tp8T6CNGNl1sj/TGgL0koboPI5llsQJ4o
v6uFfvWjRXXTO6Ad30S6uX5sdk/NCcpoo38DuBOUEW/51YW9MuGg3ofm5yA+
fD8++exBL6S8tCFIOdE99G0Ya6XhfWhvE2sYT4PLvv7p7affI+Q5iJVS4Cj9
GKD/o9Q3ApkufAxy+8cofRqHPO49xn7G0SDxG8lnHKsDRja5pxrZ3zj9mSAv
I/0zsV8jXqruXNtnIj8jutRqKXEm9j/B92b6MEH9U/RjAldqWp8El1nId5L6
LPRnkrqmyXsSTaJcpJV+mfBFnZ7lJ63k74w1/0z0ZYbzYGZ+G/000xc758MM
ob4q0UZ/p9iPnfMyxfm3M+8U/XZwfiz000H/Lcg9s0Jt0cF5stAPB+tOQ+JJ
mSWPacjrETGr9602o1o2Sx7T1K+QhxUR8gIq5GGFoJcTpLCOlfOlkMcMJN4c
BbckjxkMdIiBVMjDua/xsMFfXkCFPGzkoPDXBjH98RaFPOzwS1+lplTIww5R
PXBMIQ/nvsZj3odP5OGMNR4OqJdZVaCQx6y+r/FwxhoPZ6zxUPRY4+GMNR7O
eOHvX0Jh/dM=
              "]]}, "Charting`Private`Tag#1"]}}, <|
         "HighlightElements" -> <|
           "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
          "LayoutOptions" -> <|
           "PanelPlotLayout" -> <||>, 
            "PlotRange" -> {{0., 1.0000000000000002`}, {0., 1.}}, 
            "Frame" -> {{False, False}, {False, False}}, 
            "AxesOrigin" -> {0, 0}, "ImageSize" -> {576, 576/GoldenRatio}, 
            "Axes" -> {True, True}, 
            "LabelStyle" -> {
             FontFamily -> "Helvetica", FontSize -> 14, FontWeight -> Bold}, 
            "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
              Directive[
               PointSize[
                Rational[1, 72]], 
               RGBColor[0.24, 0.6, 0.8], 
               AbsoluteThickness[2]]}, 
            "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
                (Identity[#]& )[
                 Part[#, 1]], 
                (Identity[#]& )[
                 Part[#, 2]]}& ), 
              "ScalingFunctions" -> {{Identity, Identity}, {
                Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
            False|>, 
          "Meta" -> <|
           "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
            ListLinePlot, "GroupHighlight" -> False|>|>]]& )[<|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
         "LayoutOptions" -> <|
          "PanelPlotLayout" -> <||>, 
           "PlotRange" -> {{0., 1.0000000000000002`}, {0., 1.}}, 
           "Frame" -> {{False, False}, {False, False}}, 
           "AxesOrigin" -> {0, 0}, "ImageSize" -> {576, 576/GoldenRatio}, 
           "Axes" -> {True, True}, 
           "LabelStyle" -> {
            FontFamily -> "Helvetica", FontSize -> 14, FontWeight -> Bold}, 
           "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
             Directive[
              PointSize[
               Rational[1, 72]], 
              RGBColor[0.24, 0.6, 0.8], 
              AbsoluteThickness[2]]}, 
           "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
           False|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           ListLinePlot, "GroupHighlight" -> False|>|>],
       ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
        4.503599627370496*^15, -4.503599627370496*^15}}],
      Selectable->False]},
    Annotation[{{{}, {}, 
       Annotation[{
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[
           Rational[1, 72]], 
          RGBColor[0.24, 0.6, 0.8], 
          AbsoluteThickness[2]], 
         Line[CompressedData["
1:eJxTTMoPSmViYGAQB2IQXSOyzv1hVYs9AxQUFCSFcVW22idkhb1R/L3K7pXE
zJ+spW32Ajz7zBNn7LF7zhtkeCWv3T7CKSbJYsUxuxz/3r8laR32df695+5f
Om9XdNcr7kV0p/0hMcsC4WdX7P5t7wrW8++yN8hjPcPmdcuO777PXTeHbnv2
66F/l3A9sFsUNPG3oX6Pvc5r0bp3yo/t9gpFrHsv3Wvf8dnpxf2CZ3Zx8gu/
1rP12Wt/uGNd+fGlXXVFzsVH7/rsnzx4XLFr6Vu7nz7qJ+Ou9du/TGm2d8n7
YHc+Vd5INn6CvWf4L7GUoo925lWRF60uT7Cfc/zaIZv7H+22PnZ06nCfaP9g
q4TzuS0f7dwX3Whh3TPRXkzpwHSJzx/s3m+VnbnJYJJ9jcSsRnOT93ar5QTr
+5dOsl/5oq5mffBru7o7m8zmSE2237dFT2GmyzO7tPdMB270T7bfUbMy5wvb
A7uUcEZpV9Yp9iqN9w43mV60qwaH7xR4+AIAfr2sMg==
          "]], 
         Line[CompressedData["
1:eJxVk30sHAYAxa+j3YqqE1zR+OqmXRiHDlerR85RX3furh01Lb2ijJSiYqrK
tJiqdWuqVlb36dyHaVETpT3nq13NMOqKxnUR6uvGbStbqLEsS/aSl5df3n8v
ebacFFbcWwQCAZveyharK/PMljtb+I/+z2qvS0VVkvvO1Qgz19trdnnNu+Rp
lBtRXI1VTq5w22FDnPmD4+e6mwujbc0vz62SUKudHx4N4uJWdmNk8qgNSk4E
Bn9WyIXd25KaMRt7vON+QWym5EIqejBcoHLA/pz82fp1LiJk57VuG2RMOUcR
aRQeNgyqkqiBB+HN1Ld+lsFD+8rAsdQfPOCpLjM+fZcHeZLJvdbPvTAwMT0/
P89DY0L8Rbs0YI+rj3H6fj6ezDX4fNXoC8unvQt/cfg406fqsKigYkJ88ULB
HT7oz99V1sXTcPzxqYcGY3yEE2/5BlkHoNwx4365qQCSDGefpY4j+HK4KcaW
KYCLjqa9mh4Ef8U+hbxUAE3bUGtEdzBaflX87PlYgGneC3dL+1DMckoru3WE
IDYYus6k0jFqXkhiQ4icxTh5m4iBHJPvAl5mC7EmWR4K5YRhiqXrmNosxFwa
dbdyOgx6I8VdG8tCZDIP6HvFMLF424t4/QMRqmjcnpZ+Jq4J9xrbJooQzZD5
ermyMLfs0NsgFKH9bGCOsoQF3YJEMk0tQosgO5OuYmEifCRUZVmDMI03edKC
jfTUFOvk8BoU0sslGSw2evo8RIQbNfi4K+8Xw0tsPEt2mrzZX4NOxpuxOi4b
/DD2jw56YvQtGd5gfs9GwFGLHUqaGDr9A6Pjj9iYZK9YR+SL8WYXJ9Nps49l
zFlo2sRovas8G/jtZu//2+uCVTE8m7UKxzQ2Qg4ZN5kfrEWWlTZZ9SEbkvcD
WPUpmzyrSAt5xcKqydeDfrJafESKHir+ggXKmtZlbLoWCnHf1WvmLHw6mZie
YieBfuXO6sgKJsoevr6pe1ICk2VTg6XtTNz+ZksSrP+7Lz+Vles0IgHpKmVm
JpKBSqqtX6eRFA+KnCa6+kNRZLxjPjxECnWg8rKrTQhiXxDSF4qkKB78XU1m
BIEsJE7kdUrRbdWz9OiTI1iK97Q33ZAiy8W9aZLmD8F755mSQzLIdtIcru/y
A1Xde+JwpgxZYu2xwQZfqMrJwYP3ZEg0zU3wT/JGdGC9edyiDK/ij5bqO1Kg
WqE+WT0gxzlqAkkrdkN5mV5yaawcJ0PLjGqbHbHwp5WJDVcO/z3rrWZX9uE5
Jb+jcVwO6U+UqJhMEk7RXTICSHUw0zSLB09vR56Hs+M4qw6KmanK8Ypebw0v
Qko4Xvffv/8GIM7PoA==
          "]], 
         Line[CompressedData["
1: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
o13Cz5PaO2FHvESGix+GjXB+14n9xEtkYLTZ9oNfOnGYeIkMqys25HX52QlH
4iUyqI+1MNX604kjxEtk6Ep14xWOEy+RofEkqh2Ya2fiJTIkeqiWnPzbqfj/
DmTw1LghVfvdifPES2SwtgyZaP+9ExeIl8igPW29x9pPnYp+qAw9rgb3qXrd
CW/iJTLUurjEfpB1Kt5vliGkbxeX2KZO+BMvkeHA9DGHBnE7EUy8RIY5LdVu
ygWduEe8RIZvU6ekhiV34gHxEsbXXhqlbRjRiVDiJYwPPRU1dNv9TjwjXiLD
/L+yTU3+nYgkXiJD91FZP8uvdSKWeIkMzwuW9Jjr0Yl44iUyLPi/nu48rqfs
/wO4daxhzCD7TiFLYwnxMhhbJJJsE0Z2ZQ9fNBTZt5F9qxjZyb5LQtYJ2bPX
3e89lMlufu/77j5+f74fH30+93P28/y8z1F40KSC4TpOsZdkYsuzyh26ztBx
nr0kEy87RUz7NlVHEntJJvJ1XFSyxhQdV9hLKL7vWezEZN0590bl+ck+QK/j
KntJJlYfDvHwnKbjJntJJtz+++7vOlNHKntJJja/8HweSu3rPntJJkz/Ijeb
LdDxiL0kE+UGRVQOWaE757kzUevjlrs/b9Dxkr0kE8XcBukNdujIYC/JRKp+
duSxQzoUns4zMaVDYucD53XHSzLxpeGIJeVu6xDOPr7PgQOe757r+Df3AA62
rDw28kdqXx/ZSzJxf8faPr7UPr6wl1D70Xt9ii9pIE+cvcHMRN1hckCVKgYK
sJdkoq1L4JiE+gYKsZdI6KLGNB/qZcCFvUSC34fk0x4dDZRiL5HQvsWlnLI9
DZRhL5HQYPcmrVJ/A67sJRKK9/Bdiz/odfYSyfEdAxXZSyRsqde+zNOJBqqw
l0gYEByp+E83UJO9RIJL6tbJ6mwDddhLJBwLiT6+KcJAPfYSep42wQljogw0
ZC+R8LptieC+iww0YS+REDzpr9tBSww0Zy+R8Pzh27eRSw20Yi+R4Dve/cZl
inPv55Fw2Mv791oUt2cvkVC4qXv8tsUGOrGXSCg3NjNeXWigK3sJ7dPl4UFH
FxjwZS+REL97z/X/6Hl6sZdIqJtwxLhBcR/2EgnVvs9JdqV/P4C9REL0ytK9
JYp/Zy+REDFq1Jqm9PxD2UskqPMjluen5x/OGy4JN5UhbfyXGRjDXiLBfVX+
uJorDTCXjJCc+x8MjGMvkeBzeM3STusM57y+hLL155fesMnAZPYSCYNUL99x
MQams5dIqGQeQuLfhnM/iISA5qYUvddwzvdLKHrZ7KAlGIhkL5HQfMPhvokn
DUSxl0h4cbh11XKJBpYycEgoUHrRFuuqgZXsJRLijm+80ynVQDR7iYSTMRPO
VH1sYD17iYQbE1q5VXxtYBN7iYSgq3Uzn2gGYthLJIzf4ZUVlG1gO3uJhO+F
QnrGfzGwi71EQsms5K9H8pvYx14iYdsf7T7PK2biEHuJhD39X3Su8JOJo+wl
ErwexmZOrmDiBHsJteenC+6tqm7iLHsJlffwVT9OcTOddYOEa/z7PL3OXiLB
v0TJ8PnNTCSyl1D7bRC572hrE8m8AaHySK1Qf9evJlLYSyRIX+5/GtzZxA32
Egmj9x91Te9uIpW9REJo5vEFlXqbjpdIyNqe3ql6oIlH7CUSspXafbWBJtLZ
SyRMOvrXsWlDTOe+Jop/qDn8WrCJDPYSCe+ePwh+McqEzMsDCVWt3VbqOBMG
e4mEphnrvI9NMPGWN/wS6l2M8V06xcS/7CVUf/OTa/WdbuIje4mEC43yXyg9
y8RX9hIJv18cVDnpTxP/sZdIeNnyDoIjTRRgL5Hw24YhdT5FmfiBvUTG8hdF
78xZbKIoe4mM08VT8WWZiSK8gZORe72RCR6uXGQcq7h3dEq0CR7uf5Sx+Fti
rYrrTfB0WUZGhyvvtg/ZZDrnM2Q8n9pGXr/VBC/XKskYWHyHdSnWRA32EhkX
FtU+/WqHiTrsJTIKWBe7ZsWbqMdeIqN+yxlb/t1jwoO9REazsT7H9P2mcz+E
jJrzvFalHTKd86YysiPbNTl0xERL9hIZzaVfyk45bjpeIiOszpvEMqdMtGcv
kXGio2+TNWdM/MZeIuNDu6kjs86Z6MZeQp9Xsd8wj0QTPdhLZEy6l1OrU5KJ
XrxClXFwdK993skmAthLZBjPRn4qdcXEAPYSGXUatyp+6aqJIPYSGUOGpGT0
vmY6+Q8y1oWWjky8boK3v4Nl3B7gKhe7aTr3a8koVPtJqWa3TIxgL5HR+lZg
Hu/bJrg6xtLz+K86Vu0fE+PZS2TsPBHV+A3FU9hLZDz51GJiZKrp3Kcjw6XC
39Py3jExi71ERjvX2x1+p3gOe4mMCe8P319L8Tz2EhmxB/w9DlC8kL1ERmqn
Q922U7yEvUTG0eDU9YkUr2AvkVH40JkIv7sm1rCXyLjiNqmw/z0TG9hLZLy7
ne2ekmZiE3uJjKi4dvLBByZi2EtkLNrer13Rx6bjJTI+3mnd7OFTE/HsJTLu
e2iXy74wsZe9REaVE8OyUl6bOMheIuNuyK7TpmQ651tk8GPrJvi6ygQZ04et
rrLirQleXh2j8otrebpYjglenp6S8aDE3nefv5g4z14iI36XnDwon4Uk9hIZ
8njxS5MilnP/h4yVwUltp5eycJO9RMaeqCGZTVwt3GYvofb74FrdoGoW7rCX
yKjg/73gNzcLD9hLZEz79u3PEp4WnrCXyGh7P2XNX60tPOMNuoyqM+YrXzpa
eMNeIuPGggHlz/WwIHODoX+ft4vbgwALKi83ZEzN7FGm8+8WBHuJjBlNx70s
GWzhHXuJjF+tuEWNx1i0j7B7MJVX6axSu8db+MxeIsMjrn/YjCkWvrOXyPDd
/PhU7HQL+ezrfb/K8Mo76Wn1WZaTX6Igw07fCbec/BIFg4sZJ93nWk5+iYK4
Q7emJERY4O5bTMG+xKslVkVaTn6Jgjmtn0SlUJybX6KgfPWCzwIpzvUSBbMn
dvkR9Pe59yspiG+wo2b4HMvJL1Gwsbfrz2Xo83PzSxT0ebPjdf6ZlpNfouDh
864ruk2zUJ+9REGN3wpVUCdZaMxeoqDuqHNBU0MtJ79EweMN3VvOp/LJvf9N
QasnR3e7jrTgzV6ioJN7zsFGVJ5gL1GQd0Gp7teHWo6XKBiVnT9cGWw5+SUK
wkNTf1scZKE7e4mCth+nbj9I9ePLXkLlsfL92n4U5+aXKEhp0b3afIpz80sU
rLSvL6G/5+V4gIL8h6Pej6L3H8BeosBt/mhUo88PYi9RkDOidrWBwyz8wV6i
YErg6bXlR1gYwV6iYEtft+0DR1sYy16iICx4/G/VQyyEsJco+DBnxewxEy0n
v4Tef99CnxZhlpNfoqCANODgAirf3PwSer6GP+weSPUdzl5Czz9/sdeRBRYi
2UsUTCy2KMp7uYUo9hIFXV7Enfk72sIy3vAr6JX30UNro4UV7CUKFk50e1ou
1kI0e4mCrEbRl6vFW1jPXqJgqXfFdUX2W9jIXqIgcN25nncPW9jKXqKgd7uZ
4n8nLWxnL1Ewt0WfsPznLcSzlyh4PqtLxthL1v+77x+l+rU8mmJhN3uJgupZ
EVPTb1lOfomCUjWurc+4a+EQe4mCX2Lqbb/50MJx9hIFUePio6PTLZxkL1Hw
wwKEeL+ynPwSBSdFVoPkTAsX2UsUbN158V59zULudbsKDu/dO3SyZSGFvUTB
x++HHmzMspz8EgUhMXc843IsJ79Ewc8rXcIWfbaQxl5Cz9f/gofPd8vJL1EQ
GfWr/CqvQDp7iYIJrtFxPQoKvOQJWMG9EicGLy8s8Ia9RKH5a0+VHcWEk19C
7cs99MXyEsLxEgV3uueL8/1ROPklClzvjxjx5ieBbPYSBWkXNzXoUVYgh71E
QeGfYt8vcRXg7du/iuMPwsmHpv71utLihZUEvnB+iYLpQ1cHdqoikJe9RMXK
jk/qPK4qnPNbKiovffehXXWBQuwlKmp7Pb4+u4ZwznOp2Nll1bYVNQVKs5eo
2HqufFhYLYGf2UtUFF83ydeztoAre4mK92mb3C5RXIm9REXAtDUF3OsIVGcv
UeERPvj1MIrrspeoSDVnxKygODe/RMXC68GVUyhuyF6iYtDP1fq71BVOfomK
jjf2+g+muDl7iYpuopDLeYpbspeoGDan6Xx3N4G27CUq1oc3ORtLcXv2EhWZ
6veEOu7CyS9R0T1p84iTFOfml6hIKVTsSd96wskvURF02r4ATTj5JSpcnvT7
doriXuwlKh6M8Nof3kA496mpODZEqejnIdCPvUTF/qujujZsKJz8EhVnN51q
Vr6RcO5vVCGnP3lZqrFAMHuJCrclN7uVaSKc/BIV83Yun1zHUzj5JSpyGlYf
2PEX4eSXqIioNS/v+KYCYewl9PcLTozY2UxgBnuJivGXjaSM5gKz2UtUqD0C
fGt5CcxlL1Gxptq7wsNbCsxnL1ExuU1i1s5WAgvYS1T8uSOpmNZaOPklKi4E
fPRv2EZgFXuJisa9ht6Y3FYgmr2E6nPtt4mnIbCBvYTaT51bnfP9Kpz8EhW7
8qR292kvnPwSFXb22ZoOwskvofpdPT7jZUeBHewlKp77FJ/m0Uk4993S+/mm
e83sLLCHvURF7KYX7te7CBxkL1Fxy7NstwrdBBJ4Aa2i3s9zNoz1ETjBXqLi
DCq7nu8unPwSFf87Zl7+0VfgHHuJinFT38WN6Clwib1ExfI/3Q6e9RO4wh1O
xZt7f2k/9Ra4zl5Cn/dgQe3J/sLJL6H6N4Iav+ojcJe9RMXGMq7FgvoKx0tU
zOh15JgaSOMHe4mKvjGNG8/rL5z8EhUN8638n8dA4eSXqCg47U505iABmb1E
xf3v78P3BQknv0TF3xs+e0UMEY6XqAjt/DppxB8CJq/LVHjy+SGBd+wl1H6e
BnYaNEI4+SUqjidlImSUcO7XUzHxbECRZWOEk1+iov61+Lgz42j8YC9R8UJ5
WuxTqEBB9hINKytmdfxtokBh9hINbYdqPWImCxRnL9GgnEquUzRMoBR7iYbl
tef+EzFdoCx7iYZfdlTtUnSmcPJLNNxuFrMyZrZAZfYSDZUbn3zzyxyBauwl
Gq4qlWYdjhBOfomGm4Nv9680Xzj3/WnwXHNz1sQFAh7sJRpyFpbLTFgknPuJ
NZRpffCvZ0sEmrGXaIjeu3r++2U0frCXaAh9knwuZ4VAG/YSDfFX27fOWCXQ
jr2Evt9kl+9nVwsnv0QDp0+uEc59ghoiCi7yb7yOxhf2Enoeo6V0fb1w8ks0
YFWL834bBXqyl2jY+37u04ubhHP/oIZJZcu3rbJFIJC9RMPGnK+Zw7cKDGAv
0VBpjce99duEk1+i4fu7PQVPxND4wV5Cz+cydXZirMBI9hIN6dKSVsfihJNf
oiEtXHiv2S4Qyl6iwToe0HfQDoGJ7CUaMidM6ffD38LJL9Fwbp9Ph9UU597H
TM835mnZ/DtpPGEv0VB4T817ARRHspdomD221vQlFOfml2i4c+BZwR0UL2Iv
0ZB/Ss9Z2yhewV6ioeyZGU9nU5ybX6Kh0LxBNWG/zl6i4fFt+4ChwBr2Eg0L
N/mEjKF4fe4BIZTTAsen0fNvYS/REHW60oDqFMeyl2i4W3yjRy/6vrn3Q2vI
8+ofdRiVxx72Eg3FW5xf3p/K6wB7iYYPJYZX8qTyzPUSDRdHJf9lUvmfZC/R
MKZj+rslVD+5XqIhK3ZfS5fNAonO7ywD5jYbM5HqN5m9RENI+/CgN1T/Kewl
GrI7Ln+3jNrHTfYSKv+Fw2tOXCvwD3uJht9LFHi/lNpTGnuJhg73Rw97FS3w
iL1Ew+ZnayeGUpzOXkLPU3dJlaYUv2Av0bD/cKcxnhS/Yi/REPzntT6jKc5g
L6H+uuyn54/s19lLNDR02m9ufgl9Xui3m0PpeSReXlF/bLfFcyY9r8xeouFG
nwItbtH3MdhLqD3v8XwSSN839zyFhjq/ulWqSOXxlr1Ew7zymV/LUvm9Zy/R
0OeX0bN8qHzf8/lPat/Lj248SfWRw+ctdPjXvxoYRPX7ke/r1zGvSOwR710C
nx7YGzgdddzbH/DfS+PVGHuDrsP9sUfPsAMC//GBUh1ho+Qt0xIE8rGX6Cjx
MHRj4FGBH9hLdIhayR3LnhAoyl6io3xvefORUwIl2Ut0LA96FNforEAZ9hId
Pbqt67v4PI1H7CU6AsvUOnkpUaA2b7h07L0QfvVpEo037CU6unSNn3c3WaAJ
e4mOhnwBmkAr9hIdQZ+HFh6UItCRvUTHk+rvb1vXBPzYS3TEuPXpMOQGrRfY
S3QklIgYfuimwCj2Eh1F02Y3e3FLYDp7Cb0+vfMR4zb1N/YS+vuvz58/+ofm
Y/YSHQ8Hdzy5PZXmU/YSHf3jpqHHHWrf7CVUnsnTp9ynOJk7nI42lzsHet8V
eMBeokP+OiwjmuKX7CU6xiV1d82iWGEv0fFPmXzZ/vdoPcteosPlQ+SU03bM
XkL1M+Lu5tppNJ+xl+ioMswcu4bip+wlOrLMtFdF7lN/YC/REffDou8RFJ9h
L6Hy218kKc8D6r/sJTrWvurbIJLi3PwS3cmDEBjBXqLjQ3bff9dQ3JG9REf2
nSJ96jwSqMheouN6m0X9z1D8tpW9wdQR3uJ+wYDHAkm3bUCg9nLB7JdN8Uo+
MKNjZtrd3muf0HicYzdoHcnT5mW3eUrrW75QRoe2K19rjeJ0vuCP4pE93Del
0/iUYC84dKQcDT7v94zq9ze7x+mYs6LL56LPaT58bG8YdJjlOrW9TrExzt4Q
6lBD9ujLX1B/zmNv+HVMWDU1X/+XVJ7RtpfoiIqIj3B7JVDM3W6AVH+/thv3
jeLO5+wBRkfALVx4+FpgUy97AtFRuu7OmSfeUPvnC4Z0DPCdHLs5Q2Dp/+wF
oI4mHeIbL8gUcGcv0fFXwfbu0yThlKsO+/aHcTKVP1+wrON71t6+IxWBxbds
L9FRuMrMJSNVGt//sBuMjm1lE9xDNIGYD/aAoCMpvUeT6TqNbwzkOiZP6BW3
0KD5v4Y9oes4dOfMrK0mzTcn7AWbjtl5liWesmg86W4vyHXc/5oc8kQIzHpt
b7h0nLwybF6edwJ1ptsbah31gkYXaJBF45VL7u+E7pfum4OyBUK2215iYOCL
AV9nvxcY7mV3YAODN+/RZ/wrcOemPUAb8P6cfMYvR2DfEHsCNmB+3D0u3weB
r9n2AsvA1PX9vy+n+EyUvYA2cOfRvQk5FFuu9gbJQMHTrsleH6m/7bE3wAZK
eLt9DKB4b2sbOOj9gvK5+FLcjAHLQEyN+HzVKc69v9pAgwVlaYoTWKfbA6qB
pUv9VgZSHPY/e8I0cMkzwO0MPV9KYXtBZOD2jFqxn+j5l6+1F7wGEoae/1ya
4ks17Q2NgVFajWaF6PuOO2RvWA3k/NTb7wGVT5S3DRIG+j336T6Hyq90iu0l
BlZ3LeVe8C21R3+7g9DzBWyTgqn85z57TQOggah8n+Zto/oaNtKe4Ay086tc
4BjV77as/rSAoe9fPC37FrWH0nPtBaqB4vkz35Sm9pJY2t6AGPBv5pcWSe1r
T3xxWgEaeBpX5nI1an//wAYEAzt9mh1Xqb16PLVvbDKwv9HB+OfUnq/PsL3E
wGffyA3/UfvfVtEesAzM252wpDvFCYk8IaEXWoVfpv7ydZS94DAQVKryxDEU
5+aXGNhbyT7gTePvJXvDYMAr+F2gF8Utp9obQgOF5dc+QykOrTeUNvwGyv/d
sN1xil+/tr3EwNitaU1b0Oct32r/DwAGvtxNc8+gOOx3ewdM9dG+UdVz9Lzr
q9onDgy8NN/8nETfJydjCS0QDDRNyyqaTf1v2X77F1YDKf8OzOtH5TFkhn0j
voFtvat+fET9LbSLfWOFgSOat1hG5Xm4pP2LlIH3AVcm9aTyrpp8nFYcBjo2
uFXiO/WnM8OzqMEY2BXS69IG6j9z39uCT89fwX9lDeovYRNG0whN79/k7tT1
VL9rH++gCd1A86O3J3+h+n/T6CUt2Aw8j+2y2If6y8DJ9gkzA+s+49RCaj/5
dtgnrgz8cf5oniPUvtIu2htqA23MnUOuU3vMvc7cQD2n/X5OtgWB4qX5xyRS
+/bb0546sIFWX0N+2vaJ5pNZs2mApvp5GHB/zGfaX3qfpAnYwKrKZw7W/ELt
S82iBZaBtNtb4q5RHBrpQQto6h/6t/2DvtL+r6h9otXA2klP76RTXPjPOFqx
GSg1vHmJbt+o/7xMpxWMgY1JJYbtoLhPo3I0oxtosSQ4Vae47dhe1OEMSOdb
9K32neorbQkNqAaKFT8/xYfig3uv0AhowKW6x74wisPf5qUFkQnz27yvsRQX
2d6GFrwm9sRdHn6LYp9LM2hDY6JDSSF/pLhrr+O0YTVxukPeyFr/CeTpke13
r6SJEu2+NvejOOy4feOviV8LvMw/i+KYZaHUQUz4rtynxlM87+4+GgBNtMgY
qtyjODe/xHQc+C3+D+WyTvM=
          "]], 
         Line[CompressedData["
1:eJw9kg0sFGAYx49Sx+oyK0e+QgtDR1u7FuexYqySG8X52sVNPibOxpQ2aqjL
0E0+GyVk0q0rRM1G52tLEqFTuUZJSs+9yPdnL2s927t3v70fe57//28eFucT
rslgMA7TtblH8XSUFWIExlZNQfw/3tgqAqcsHdkhCQgm1p9PxlO+d+u8v/5l
hJZFFef9OoEIcVLhu6sIY/HMdgvK1coCpSQVIftOIEO0RkDYUsc+kYbQEDIw
lrtKQGrV479yA+Fib2J87QoBru54YX0mQvGkS5VimYDgyoryUg4CX85Je7VE
QB3GMrDKRZAYeTLliwRWu00FI/kI7g6So9kLBDIa7YqKi+k5Ep2geQIaNa5D
PqUIvmPFWpw5Aou2IoNdDxCePywrN5ul/fLyBB2VCDLH7V/t/hDw/tJflFKN
cEzS3uY3Q0DGsvjIlSH4Pxr1KJ0mkN6TYjgtR2DlB8UyKA+Y/AqoqUMQnD7C
vTZFoHRVdFfUSN93h5cbUx6J/v3JuAlBzp6XDxICBZFpRh+a6fz234SPKbfN
WQffbkXwY9nXllKO0VOVeHYiZL7sr5JRljbfV2l0IZzjKHlDlG2WxaZNbxGe
xXGTDtD/eR18YUIfQmXyrE8G5U4zKLMfRLDjs/p20P5eazuPjg8heE6lT1dS
9kzzsCgbRlgLFNQL6XzHs0JFASMIblKJIZfOX3Uws1JvDMFUus/cluqTdUbx
/c0PBGngRpcT1W9i206rjEmEAuLOjqL6BufZRLoQhFCHEK8Sqr/EY6F6YQZh
//qL+mbqT5SJ+OfTeYQOQYBXL/WPoZ9nE71M77u6sPuov3xHUZTlOgKpj9BT
UP9941TVwxpqiGkYdCmj+djTqzmRr6WGYTdJSSzNz3Xf/kPe2mpwvpBqa7eZ
r6Wz4czdashhNk0OUb7Zmlih0FVDL89JlUDzyXziMZq8V/0/z38Bh1yQCQ==

          "]], 
         Line[CompressedData["
1:eJxTTMoPSmViYGAQB2IQnQYG7+wZwOCDveSUBdvks97Zv6lnYX79/709d9JJ
jpu57+xVcl1e3ADy7S48iJlU+M5+9fH9608C+VvuPdvkXfrOvqa/LHIvkJ/e
e5uLtfKd/fQjGU83A/lxd/al7Kt5Z/8/bVrwWiB/yukJB8ob3tlvKvu/eCWQ
zxMdKGfY8s5+4+fF11YA+ce6GOpetb+z/3u3+fUqIP9A1Lz7i7vf2U81nf9o
PZD/65SWc2z/O/uyX193bwfyzSR5F4lNfme/6Lno8QMgfvOar+envbOX3NET
DHLfXw5Ou85Z7+yvZ0clXgTyW1cpVTvNe2d/l6n+A8g/V9J/rvm98J29Xu0v
hgdA/guH3stblr6zP3brzKRnQP5e03vvcle+s18m/W3pGyA/zO3NP7W17+zP
25dZfQLytxZtZ36w4Z29o7tvwHcg/8Yu+78ztgDdb1j9/DeQv0Ou9XXgDkT4
AgAxXtbL
          "]], 
         Line[CompressedData["
1:eJxTTMoPSmViYGAQB2IQzXV9cYEt13t7BjD4YF/hbX7hB+97e4+Iq4n//7+3
56rMLdwi+N5+4vvUm/+A/EPxbiEFou/tbxzdmAbiL/p/sEJH8r290u0dnCD+
sogH917IvLfP0q8+9BfIv5S1sG2pwnv7TYd+TADxlc1YC5JU3tv/mmJYCuLP
2sU9W17jvb3zMtV8EN/sxxb2u9rv7bu/XakD8X+9Y9g2S/+9/ZVW+yUg/pN5
75dGGL+3lwlJvQ/ic3/K+C5q/t7ebnK3Msj+7kshpy5avbeXLv2eDOInOWyW
67F7b7/m54oFIP5E65YvLk7v7b8rLAD7R/TIce8/ru/tv726wwfy78ebtSqb
PN/brwuPdwDx1WqX1aX5vreXS1fPA/E3rnWMkgwEulfSdAaIPzXbf/upkPf2
inkd+0D8s9vOT62KeG+/NVXxIYgf3X/oq0YMInwB7trPSw==
          "]], 
         Line[CompressedData["
1:eJxTTMoPSmViYGAQB2IQvd79YZXIuvf2DGDwwf4N/6kropve26+wDPz9//97
+1/nEp7Ib3tvz5ri+h3Ev9SydKXRrvf2ovV3PoP4lYYzVPz2vbe/0yX2EcT/
cMUitOjQe/vw9s/vQHyT/Hbr+cfe23eUFL8F8V0YWq5fOfXePi9o2hsQX61D
T1P4/Ht7LsUYMP8KW7tB1OX39pEPjoD5/jW9b1def28fN+ECWP+MF44JTHfe
20sY1r8H8Y1Vuc64Pnhvv3FZMdj+Rdw+JWFP3tuHXg0Au+/lbPZIkxdA9+8V
+wriM1+zqbr/+r39/tij38Du3fn6evj79/bN22N+gPhb3UWK5n56bx906s5P
EN+vfpvHhq/v7XWnuYLDY0/CpegJP97bC0lP/wPi/3+dvtr293t7xsiLf0F8
ccVy8x1/39v/9v/yD8RnhIYrLHwBLy/Zgg==
          "]]}, "Charting`Private`Tag#1"]}, {
       Annotation[{
         Directive[
          PointSize[
           Rational[1, 72]], 
          RGBColor[0.24, 0.6, 0.8], 
          AbsoluteThickness[2]], 
         GeometricTransformation[
          Inset[
           Style[
            Graphics[{
              EdgeForm[], 
              Disk[{0, 0}]}, PlotRangePadding -> Scaled[0.15]], 
            GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                PointSize[
                 Rational[1, 72]], 
                RGBColor[0.24, 0.6, 0.8], 
                AbsoluteThickness[2]]}], {0., 0.}, Automatic, 
           Offset[8]], CompressedData["
1:eJxlkwlIVFEUhs1EQiIiLMTKFloMEYmICKmfEqmIKA0iRERES0TKQkIsJCmR
kjIxyzajtMUQsTCXEDF3Rc21cdfRGcdxZnwtWLRB7973+4bswmPmvPvuOf/5
v3M3RJ0NjVns4uISoz6L1MfV5f910bP4gDH5Kv6Nb+txhU+aLaQib8F+AX4X
fu4+EnUM9++JVajH2vfF+vf2EPHmNfcjoZ0v1b/3MOQn7PEoX5CvEj9T4qoS
s2OxLTyzds63Sj+v5a/W4wL1tCG/hnECtHrvGV/GDrnqeO4m69czfxLq5nzV
Cg3YXdp8ofrxdeppwrwvofJgMx7Wry85H5tFfS2Y98mYLP60Iiw6cOzojbvU
28b8uTgn5CW0492hpa5+6c+po4PfFdGnTli3bF9StOYV++lEbJbjEnYW46As
0MV+SthfF3W/hcgSntmNN4+UF42Hy9lvD/ZHmjs3DlVCtmPoYZ0a6u5Ftpfb
iWX+tVgn5Pj0MU8t8/Zhq5ATVo/Tp8T6CNGNl1sj/TGgL0koboPI5llsQJ4o
v6uFfvWjRXXTO6Ad30S6uX5sdk/NCcpoo38DuBOUEW/51YW9MuGg3ofm5yA+
fD8++exBL6S8tCFIOdE99G0Ya6XhfWhvE2sYT4PLvv7p7affI+Q5iJVS4Cj9
GKD/o9Q3ApkufAxy+8cofRqHPO49xn7G0SDxG8lnHKsDRja5pxrZ3zj9mSAv
I/0zsV8jXqruXNtnIj8jutRqKXEm9j/B92b6MEH9U/RjAldqWp8El1nId5L6
LPRnkrqmyXsSTaJcpJV+mfBFnZ7lJ63k74w1/0z0ZYbzYGZ+G/000xc758MM
ob4q0UZ/p9iPnfMyxfm3M+8U/XZwfiz000H/Lcg9s0Jt0cF5stAPB+tOQ+JJ
mSWPacjrETGr9602o1o2Sx7T1K+QhxUR8gIq5GGFoJcTpLCOlfOlkMcMJN4c
BbckjxkMdIiBVMjDua/xsMFfXkCFPGzkoPDXBjH98RaFPOzwS1+lplTIww5R
PXBMIQ/nvsZj3odP5OGMNR4OqJdZVaCQx6y+r/FwxhoPZ6zxUPRY4+GMNR7O
eOHvX0Jh/dM=
          "]]}, "Charting`Private`Tag#1"]}}, <|
     "HighlightElements" -> <|
       "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
      "LayoutOptions" -> <|
       "PanelPlotLayout" -> <||>, 
        "PlotRange" -> {{0., 1.0000000000000002`}, {0., 1.}}, 
        "Frame" -> {{False, False}, {False, False}}, "AxesOrigin" -> {0, 0}, 
        "ImageSize" -> {576, 576/GoldenRatio}, "Axes" -> {True, True}, 
        "LabelStyle" -> {
         FontFamily -> "Helvetica", FontSize -> 14, FontWeight -> Bold}, 
        "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
          Directive[
           PointSize[
            Rational[1, 72]], 
           RGBColor[0.24, 0.6, 0.8], 
           AbsoluteThickness[2]]}, 
        "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), 
          "ScalingFunctions" -> {{Identity, Identity}, {
            Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>, 
      "Meta" -> <|
       "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
        ListLinePlot, "GroupHighlight" -> False|>|>, 
     "DynamicHighlight"]], {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox[
     TagBox["\"x (server\[CloseCurlyQuote]s point probability)\"", HoldForm], 
     TraditionalForm], 
    FormBox[
     TagBox["\"p(x) (probability A wins)\"", HoldForm], TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{Automatic, Automatic},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->Large,
  LabelStyle->{FontFamily -> "Helvetica", FontSize -> 14, Bold},
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.24, 0.6, 0.8], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.95, 0.627, 0.1425], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.455, 0.7, 0.21], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.578, 0.51, 0.85], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.4, 0.64, 1.], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[1., 0.75, 0.], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.8, 0.4, 0.76], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.637, 0.65, 0.], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[2]]}, "DomainPadding" -> Scaled[0.02], 
    "RangePadding" -> Scaled[0.05], "OptimizePlotMarkers" -> True, 
    "IncludeHighlighting" -> "CurrentSet", "HighlightStyle" -> Automatic, 
    "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox[
   "\"Winning Probability p(x) vs. Server A winning point probability x\"", 
    TraditionalForm],
  PlotRange->{{0., 1.0000000000000002`}, {0., 1.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.961182661879753*^9, 3.9611830468185253`*^9, 
  3.9611831129075527`*^9, 3.961184542362673*^9, 3.96126932363216*^9},
 CellLabel->"Out[79]=",ExpressionUUID->"530eae46-62d1-d04c-96e9-ba6680ef53b3"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Exercise 2. MonteCarlo integration.", "Section",
 CellChangeTimes->{{3.899196796593347*^9, 3.8991968057899837`*^9}, 
   3.8991968639196653`*^9, {3.8991974694444323`*^9, 3.899197475789323*^9}, {
   3.961033684934208*^9, 
   3.961033685172851*^9}},ExpressionUUID->"d8dc5952-2301-4e6e-b55d-\
76b97ca5b9bd"],

Cell[TextData[{
 "Define the function f (x) as below . Plot it in the interval (0, 3). \
Integrate f(x) analytically inside this range. Find numerically the maximum \
",
 StyleBox["f_max",
  FontSlant->"Italic"],
 " of f(x) within the range (0,3). Write a code that generate 10^N random \
points uniformly distributed  in the rectangular region defined by ",
 StyleBox["x",
  FontSlant->"Italic"],
 " between (0,3) and ",
 StyleBox["y",
  FontSlant->"Italic"],
 " betwen 0 and ",
 StyleBox["f_max",
  FontSlant->"Italic"],
 " and counts how many points are below f(x). Plot the points below f(x) and \
the function itself for a couple values of N, e.g. N=2 and N=4 or create a ",
 StyleBox["Manipulate",
  FontWeight->"Bold"],
 " command showing the plot when varying N. The ratio of points below f(x) \
and the total number of random points 10^N, multiplied by the total area of \
the rectangular region, should approximate the exact integral of f(x) between \
0 and 3 (MonteCarlo integration). Plot the result of the MonteCarlo \
integration as a function of N and show graphically that it converges to the  \
true value for N increasing from 1 to 5 or more. \n"
}], "Text",
 CellChangeTimes->{{3.899195833716405*^9, 3.899196430929858*^9}, {
  3.899196463638425*^9, 3.899196482529766*^9}, {3.899196586968074*^9, 
  3.899196635280868*^9}, {3.899196769144549*^9, 3.899196794307872*^9}, {
  3.899197822178175*^9, 3.899197826664624*^9}, {3.899197861914424*^9, 
  3.899197865432228*^9}, {3.899197908508834*^9, 3.8991980022356443`*^9}, {
  3.899198046088769*^9, 3.8991980490199413`*^9}, {3.899198095264488*^9, 
  3.8991980959018927`*^9}, {3.9608693321668777`*^9, 3.96086933404184*^9}, {
  3.961033688710752*^9, 3.96103368935959*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"58c97fbb-df94-4924-afce-aad8cbab2d61"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Clear", "[", "f", "]"}], ";", 
  RowBox[{
   RowBox[{"f", "[", "x_", "]"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Sin", "[", "x", "]"}], "^", "2"}], "*", 
    RowBox[{"Exp", "[", 
     RowBox[{"-", "x"}], "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.899192417742848*^9, 3.899192438318673*^9}, {
   3.8991926446035357`*^9, 3.8991926474865303`*^9}, 3.899192730405875*^9, {
   3.899195438369609*^9, 3.899195458983409*^9}, {3.899195506467699*^9, 
   3.899195535895338*^9}, {3.899196546363762*^9, 3.899196557941078*^9}, {
   3.899197572061232*^9, 3.89919759775673*^9}, {3.899197766993595*^9, 
   3.899197769215845*^9}, {3.9608692898108177`*^9, 3.96086929822997*^9}},
 CellLabel->
  "In[120]:=",ExpressionUUID->"1c400630-b82c-49a1-bf56-a5f749747e72"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"f", "[", "x_", "]"}], ":=", 
    RowBox[{
     RowBox[{
      RowBox[{"Sin", "[", "x", "]"}], "^", "2"}], "*", 
     RowBox[{"Exp", "[", 
      RowBox[{"-", "x"}], "]"}]}]}], ";"}], "\n", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Plot", " ", "of", " ", "the", " ", "above", " ", "function"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"f", "[", "x", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", "3"}], "}"}], ",", 
    RowBox[{"PlotLabel", "->", "\"\<f(x) = sin\.b2(x)e\:207b\:02e3\>\""}], ",", 
    RowBox[{"AxesLabel", "->", 
     RowBox[{"{", 
      RowBox[{"\"\<x\>\"", ",", "\"\<f(x)\>\""}], "}"}]}], ",", 
    RowBox[{"PlotStyle", "->", 
     RowBox[{"{", 
      RowBox[{"Thick", ",", "Blue"}], "}"}]}]}], "]"}], "\n", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Analytical", " ", "integration"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"analyticalIntegral", "=", 
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{"f", "[", "x", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "3"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"analyticalValue", "=", 
   RowBox[{"N", "[", "analyticalIntegral", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Print", "[", 
    RowBox[{"\"\<Analytical integral: \>\"", ",", "analyticalValue"}], "]"}], 
   ";"}], "\n", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Finding", " ", "maximum", " ", "value", " ", 
    RowBox[{"in", "[", 
     RowBox[{"0", ",", "3"}], "]"}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fmax", "=", 
   RowBox[{"First", "@", 
    RowBox[{"NMaximize", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"f", "[", "x", "]"}], ",", 
        RowBox[{"0", "<=", "x", "<=", "3"}]}], "}"}], ",", "x"}], "]"}]}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Print", "[", 
    RowBox[{"\"\<Maximum value fmax: \>\"", ",", "fmax"}], "]"}], ";"}], "\n",
   "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Monte", " ", "Carlo", " ", "plotting", " ", "function"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"plotMonteCarlo", "[", "n_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"totalPoints", "=", 
        RowBox[{"10", "^", "n"}]}], ",", "randomX", ",", "randomY", ",", 
       "belowPoints", ",", "abovePoints", ",", 
       RowBox[{"area", "=", 
        RowBox[{"3", "*", "fmax"}]}], ",", "integralEstimate"}], "}"}], ",", 
     RowBox[{"(*", 
      RowBox[{"Generate", " ", "random", " ", "points"}], "*)"}], 
     RowBox[{
      RowBox[{"randomX", "=", 
       RowBox[{"RandomReal", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "3"}], "}"}], ",", "totalPoints"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"randomY", "=", 
       RowBox[{"RandomReal", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "fmax"}], "}"}], ",", "totalPoints"}], "]"}]}], ";",
       "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
       "Separate", " ", "points", " ", "below", " ", "and", " ", "above", " ",
         "the", " ", "curve"}], "*)"}], 
      RowBox[{"belowPoints", "=", 
       RowBox[{"Pick", "[", 
        RowBox[{
         RowBox[{"Transpose", "[", 
          RowBox[{"{", 
           RowBox[{"randomX", ",", "randomY"}], "}"}], "]"}], ",", 
         RowBox[{"UnitStep", "[", 
          RowBox[{
           RowBox[{"f", "[", "randomX", "]"}], "-", "randomY"}], "]"}], ",", 
         "1"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"abovePoints", "=", 
       RowBox[{"Pick", "[", 
        RowBox[{
         RowBox[{"Transpose", "[", 
          RowBox[{"{", 
           RowBox[{"randomX", ",", "randomY"}], "}"}], "]"}], ",", 
         RowBox[{"UnitStep", "[", 
          RowBox[{
           RowBox[{"f", "[", "randomX", "]"}], "-", "randomY"}], "]"}], ",", 
         "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
       "Based", " ", "on", " ", "the", " ", "output", " ", "of", " ", "the", " ",
         "UnitStep", " ", "function", " ", "the", " ", "points", " ", "are", " ",
         "assigned", " ", "to", " ", "one", " ", "of", " ", "the", " ", "2", " ",
         "lists"}], "*)"}], 
      RowBox[{"(*", 
       RowBox[{"Calculate", " ", "integral", " ", "estimate"}], "*)"}], 
      RowBox[{"integralEstimate", "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Length", "[", "belowPoints", "]"}], "/", "totalPoints"}], 
         ")"}], "*", "area"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"Create", " ", "plot"}], "*)"}], 
      RowBox[{"ListPlot", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"belowPoints", ",", "abovePoints"}], "}"}], ",", 
        RowBox[{"PlotStyle", "->", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"PointSize", "[", "0.001", "]"}], ",", "Green"}], "}"}], 
           ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"PointSize", "[", "0.001", "]"}], ",", "Red"}], "}"}]}], 
          "}"}]}], ",", 
        RowBox[{"PlotLabel", "->", 
         RowBox[{"StringForm", "[", 
          
          RowBox[{"\"\<N=``: {:.5f} (Exact: {:.5f})\>\"", ",", "n", ",", 
           "integralEstimate", ",", "analyticalValue"}], "]"}]}], ",", 
        RowBox[{"AxesLabel", "->", 
         RowBox[{"{", 
          RowBox[{"\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}], ",", 
        RowBox[{"ImageSize", "->", "300"}], ",", 
        RowBox[{"Epilog", "->", 
         RowBox[{"{", 
          RowBox[{"Thick", ",", "Blue", ",", 
           RowBox[{"Line", "[", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"x", ",", 
                RowBox[{"f", "[", "x", "]"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"x", ",", "0", ",", "3", ",", "0.01"}], "}"}]}], "]"}],
             "]"}]}], "}"}]}]}], "]"}]}]}], "]"}]}], "\n", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Monte", " ", "Carlo", " ", "computation", " ", "function", " ", 
    RowBox[{"(", 
     RowBox[{"no", " ", "plot"}], ")"}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"computeMonteCarlo", "[", "n_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"totalPoints", "=", 
        RowBox[{"10", "^", "n"}]}], ",", "randomX", ",", "randomY", ",", 
       "belowCount"}], "}"}], ",", 
     RowBox[{
      RowBox[{"randomX", "=", 
       RowBox[{"RandomReal", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "3"}], "}"}], ",", "totalPoints"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"randomY", "=", 
       RowBox[{"RandomReal", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "fmax"}], "}"}], ",", "totalPoints"}], "]"}]}], ";",
       "\[IndentingNewLine]", 
      RowBox[{"belowCount", "=", 
       RowBox[{"Total", "[", 
        RowBox[{"UnitStep", "[", 
         RowBox[{
          RowBox[{"f", "[", "randomX", "]"}], "-", "randomY"}], "]"}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"belowCount", "/", "totalPoints"}], ")"}], "*", 
       RowBox[{"(", 
        RowBox[{"3", "*", "fmax"}], ")"}]}]}]}], "]"}]}], "\n", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "Generate", " ", "plots", " ", "for", " ", "different", " ", "N", " ", 
    "values"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Manipulate", "[", 
   RowBox[{
    RowBox[{"plotMonteCarlo", "[", "n", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "2", ",", "6", ",", "1", ",", 
      RowBox[{"ControlType", "->", "Setter"}]}], "}"}], ",", 
    RowBox[{"ControlPlacement", "->", "Top"}]}], "]"}], "\n", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Convergence", " ", "analysis"}], "*)"}]}], "\[IndentingNewLine]", 

 RowBox[{
  RowBox[{
   RowBox[{"convergenceData", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"n", ",", 
        RowBox[{"Mean", "@", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"computeMonteCarlo", "[", "n", "]"}], ",", 
           RowBox[{"{", "10", "}"}]}], "]"}]}]}], "}"}], ",", 
      RowBox[{"(*", 
       RowBox[{"Average", " ", "10", " ", "runs"}], "*)"}], 
      RowBox[{"{", 
       RowBox[{"n", ",", "1", ",", "6"}], "}"}]}], "]"}]}], ";"}], "\n", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Plot", " ", "convergence"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{"convergenceData", ",", 
   RowBox[{"Joined", "->", "True"}], ",", 
   RowBox[{"Mesh", "->", "All"}], ",", 
   RowBox[{"MeshStyle", "->", "Red"}], ",", 
   RowBox[{"PlotRange", "->", 
    RowBox[{"{", 
     RowBox[{"Automatic", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"analyticalValue", "-", "0.1"}], ",", 
        RowBox[{"analyticalValue", "+", "0.1"}]}], "}"}]}], "}"}]}], ",", 
   RowBox[{"Epilog", "->", 
    RowBox[{"{", 
     RowBox[{"Dashed", ",", "Gray", ",", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "analyticalValue"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"6", ",", "analyticalValue"}], "}"}]}], "}"}], "]"}], ",", 
      RowBox[{"Text", "[", 
       RowBox[{"\"\<Exact Value\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"4.5", ",", 
          RowBox[{"analyticalValue", "+", "0.03"}]}], "}"}]}], "]"}]}], 
     "}"}]}], ",", 
   RowBox[{"PlotLabel", "->", "\"\<Monte Carlo Convergence\>\""}], ",", 
   RowBox[{"AxesLabel", "->", 
    RowBox[{"{", 
     RowBox[{"\"\<N\>\"", ",", "\"\<Integral Estimate\>\""}], "}"}]}], ",", 
   RowBox[{"GridLines", "->", "Automatic"}]}], "]"}]}], "Input",
 CellChangeTimes->{
  3.9612223179509296`*^9, 3.9612228900140705`*^9, 3.9612232354150105`*^9, {
   3.9612469431561337`*^9, 3.96124696113624*^9}, {3.961268547120201*^9, 
   3.9612686006900826`*^9}, {3.961269215385868*^9, 3.961269256989338*^9}, {
   3.96127002439666*^9, 3.9612700298632393`*^9}, 3.961270810242344*^9},
 CellLabel->
  "In[121]:=",ExpressionUUID->"ad9f332c-c5b7-0749-8622-0ef925e5d5a5"],

Cell[BoxData[
 GraphicsBox[
  InterpretationBox[{
    TagBox[{{{}, {}, 
       TagBox[
        {RGBColor[0, 0, 1], Thickness[Large], Opacity[1.], 
         LineBox[CompressedData["
1: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
UKAhnpg1/FxcpBP1YapB9zUM8T+Uydz4
          "]]},
        Annotation[#, "Charting`Private`Tag#1"]& ]}, {}},
     {"WolframDynamicHighlight", <|
      "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
    StyleBox[
     DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
       Slot["HighlightElements"], 
       Slot["LayoutOptions"], 
       Slot["Meta"], 
       Charting`HighlightActionFunction["DynamicHighlight", {{{{}, {}, 
           Annotation[{
             Directive[
              Opacity[1.], 
              AbsoluteThickness[2], 
              Thickness[Large], 
              RGBColor[0, 0, 1]], 
             Line[CompressedData["
1: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
UKAhnpg1/FxcpBP1YapB9zUM8T+Uydz4
              "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
         "LayoutOptions" -> <|
          "PanelPlotLayout" -> <||>, 
           "PlotRange" -> {{0, 3}, {0., 0.26439996776885655`}}, 
           "Frame" -> {{False, False}, {False, False}}, 
           "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
           "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
           GoldenRatio^(-1), "DefaultStyle" -> {
             Directive[
              Opacity[1.], 
              AbsoluteThickness[2], 
              Thickness[Large], 
              RGBColor[0, 0, 1]]}, 
           "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
           False|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           Plot, "GroupHighlight" -> False|>|>]]& )[<|
       "HighlightElements" -> <|
         "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
        "LayoutOptions" -> <|
         "PanelPlotLayout" -> <||>, 
          "PlotRange" -> {{0, 3}, {0., 0.26439996776885655`}}, 
          "Frame" -> {{False, False}, {False, False}}, "AxesOrigin" -> {0, 0},
           "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
          "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
          "DefaultStyle" -> {
            Directive[
             Opacity[1.], 
             AbsoluteThickness[2], 
             Thickness[Large], 
             RGBColor[0, 0, 1]]}, 
          "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
              (Identity[#]& )[
               Part[#, 1]], 
              (Identity[#]& )[
               Part[#, 2]]}& ), 
            "ScalingFunctions" -> {{Identity, Identity}, {
              Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>,
         "Meta" -> <|
         "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
          Plot, "GroupHighlight" -> False|>|>],
      ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
       4.503599627370496*^15, -4.503599627370496*^15}}],
     Selectable->False]},
   Annotation[{{{{}, {}, 
       Annotation[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[2], 
          Thickness[Large], 
          RGBColor[0, 0, 1]], 
         Line[CompressedData["
1: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
UKAhnpg1/FxcpBP1YapB9zUM8T+Uydz4
          "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
    "HighlightElements" -> <|
      "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
     "LayoutOptions" -> <|
      "PanelPlotLayout" -> <||>, 
       "PlotRange" -> {{0, 3}, {0., 0.26439996776885655`}}, 
       "Frame" -> {{False, False}, {False, False}}, "AxesOrigin" -> {0, 0}, 
       "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
       "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
         Directive[
          Opacity[1.], 
          AbsoluteThickness[2], 
          Thickness[Large], 
          RGBColor[0, 0, 1]]}, 
       "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), 
         "ScalingFunctions" -> {{Identity, Identity}, {Identity, Identity}}|>,
        "Primitives" -> {}, "GCFlag" -> False|>, 
     "Meta" -> <|
      "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
       Plot, "GroupHighlight" -> False|>|>, "DynamicHighlight"]],
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox[
     TagBox["\"x\"", HoldForm], TraditionalForm], 
    FormBox[
     TagBox["\"f(x)\"", HoldForm], TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox["\"f(x) = sin\.b2(x)e\:207b\:02e3\"", TraditionalForm],
  PlotRange->{{0, 3}, {0., 0.26439996776885655`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.9612469641654243`*^9, 3.961269274274391*^9, 
  3.961269332733736*^9, 3.961270057289242*^9, 3.9612708137238827`*^9, 
  3.961270878003298*^9},
 CellLabel->
  "Out[123]=",ExpressionUUID->"17feefe7-7efe-494c-9d4e-08510a24a630"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Analytical integral: \"\>", "\[InvisibleSpace]", 
   "0.3826691278890675`"}],
  SequenceForm["Analytical integral: ", 0.3826691278890675],
  Editable->False]], "Print",
 CellChangeTimes->{3.9612469642464104`*^9, 3.961269274359186*^9, 
  3.9612693328746223`*^9, 3.9612700574303303`*^9, 3.961270813796753*^9, 
  3.9612708780868874`*^9},
 CellLabel->
  "During evaluation of \
In[121]:=",ExpressionUUID->"2958c0c7-0088-ac41-95d8-f0223caf885f"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Maximum value fmax: \"\>", "\[InvisibleSpace]", 
   "0.26439997406138444`"}],
  SequenceForm["Maximum value fmax: ", 0.26439997406138444`],
  Editable->False]], "Print",
 CellChangeTimes->{3.9612469642464104`*^9, 3.961269274359186*^9, 
  3.9612693328746223`*^9, 3.9612700574303303`*^9, 3.961270813796753*^9, 
  3.961270878112196*^9},
 CellLabel->
  "During evaluation of \
In[121]:=",ExpressionUUID->"19500ca5-8a62-0a4c-921e-ee07a5888a02"]
}, Open  ]],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`n$$ = 6, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`n$$], 2, 6, 1, ControlType -> SetterBar}}, 
    Typeset`size$$ = {300., {101.44647864844927`, 107.17841224219927`}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = True, 
    Typeset`keyframeActionsQ$$ = False, Typeset`keyframeList$$ = {}}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`n$$ = 2}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$, Typeset`keyframeActionsQ$$, 
        Typeset`keyframeList$$}, 
      "Body" :> $CellContext`plotMonteCarlo[$CellContext`n$$], 
      "Specifications" :> {{$CellContext`n$$, 2, 6, 1, ControlType -> 
         Setter}}, "Options" :> {ControlPlacement -> Top}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{345.1, {142.62763099219927`, 148.35956458594927`}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.9612469641654243`*^9, 3.961269274274391*^9, 
  3.961269332733736*^9, 3.961270057289242*^9, 3.9612708137238827`*^9, 
  3.961270878174162*^9},
 CellLabel->
  "Out[131]=",ExpressionUUID->"a2cf48b0-6d5a-a84f-bb73-77b3044641ba"],

Cell[BoxData[
 GraphicsBox[{{}, 
   InterpretationBox[{
     TagBox[
      GraphicsComplexBox[{{1., 0.44419195642312587`}, {2., 
       0.39342716140334}, {3., 0.37859432285849637`}, {4., 
       0.38114842660792925`}, {5., 0.3824524472800001}, {6., 
       0.3826111665844291}, {1., 0.44419195642312587`}, {2., 
       0.39342716140334}, {3., 0.37859432285849637`}, {4., 
       0.38114842660792925`}, {5., 0.3824524472800001}, {6., 
       0.3826111665844291}}, {{{}, {}, 
         TagBox[
          {RGBColor[0.24, 0.6, 0.8], PointSize[0.012833333333333334`], 
           AbsoluteThickness[2], LineBox[{1, 2, 3, 4, 5, 6}]},
          Annotation[#, "Charting`Private`Tag#1"]& ]}, {
         TagBox[
          {RGBColor[1, 0, 0], PointSize[0.012833333333333334`], 
           AbsoluteThickness[2], PointBox[{1, 2, 3, 4, 5, 6}]},
          Annotation[#, "Charting`Private`Tag#1"]& ], {}}}],
      {"WolframDynamicHighlight", <|
       "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>}], 
     StyleBox[
      DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
        Slot["HighlightElements"], 
        Slot["LayoutOptions"], 
        Slot["Meta"], 
        Charting`HighlightActionFunction["DynamicHighlight", 
         GraphicsComplex[{{1., 0.44419195642312587`}, {2., 
          0.39342716140334}, {3., 0.37859432285849637`}, {4., 
          0.38114842660792925`}, {5., 0.3824524472800001}, {6., 
          0.3826111665844291}, {1., 0.44419195642312587`}, {2., 
          0.39342716140334}, {3., 0.37859432285849637`}, {4., 
          0.38114842660792925`}, {5., 0.3824524472800001}, {6., 
          0.3826111665844291}}, {{{}, {}, 
            Annotation[{
              Hue[0.67, 0.6, 0.6], 
              Directive[
               PointSize[0.012833333333333334`], 
               RGBColor[0.24, 0.6, 0.8], 
               AbsoluteThickness[2]], 
              Line[{1, 2, 3, 4, 5, 6}]}, "Charting`Private`Tag#1"]}, {
            Annotation[{
              Directive[
               PointSize[0.012833333333333334`], 
               AbsoluteThickness[2], 
               RGBColor[1, 0, 0]], 
              Point[{1, 2, 3, 4, 5, 6}]}, "Charting`Private`Tag#1"], {}}}], <|
         "HighlightElements" -> <|
           "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
          "LayoutOptions" -> <|
           "PanelPlotLayout" -> <||>, 
            "PlotRange" -> {{0, 6.}, {0.2826691278890675, 
              0.48266912788906746`}}, 
            "Frame" -> {{False, False}, {False, False}}, 
            "AxesOrigin" -> {0, 0.2826691278890681}, 
            "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
            "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
            "DefaultStyle" -> {
              Directive[
               PointSize[0.012833333333333334`], 
               AbsoluteThickness[2], 
               RGBColor[1, 0, 0]]}, 
            "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
                (Identity[#]& )[
                 Part[#, 1]], 
                (Identity[#]& )[
                 Part[#, 2]]}& ), 
              "ScalingFunctions" -> {{Identity, Identity}, {
                Identity, Identity}}|>, "Primitives" -> {{{}, {}, 
               Annotation[{
                 Hue[0.67, 0.6, 0.6], 
                 Directive[
                  PointSize[0.012833333333333334`], 
                  RGBColor[0.24, 0.6, 0.8], 
                  AbsoluteThickness[2]], 
                 
                 Line[{{1., 0.44419195642312587`}, {2., 0.39342716140334}, {
                  3., 0.37859432285849637`}, {4., 0.38114842660792925`}, {5., 
                  0.3824524472800001}, {6., 0.3826111665844291}}]}, 
                "Charting`Private`Tag#1"]}, {
               Annotation[{
                 Directive[
                  PointSize[0.012833333333333334`], 
                  AbsoluteThickness[2], 
                  RGBColor[1, 0, 0]], {
                  Point[{1., 0.44419195642312587`}], 
                  Point[{2., 0.39342716140334}], 
                  Point[{3., 0.37859432285849637`}], 
                  Point[{4., 0.38114842660792925`}], 
                  Point[{5., 0.3824524472800001}], 
                  Point[{6., 0.3826111665844291}]}}, 
                "Charting`Private`Tag#1"], {}}}, "GCFlag" -> True|>, 
          "Meta" -> <|
           "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
            ListPlot, "GroupHighlight" -> False|>|>]]& )[<|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
         "LayoutOptions" -> <|
          "PanelPlotLayout" -> <||>, 
           "PlotRange" -> {{0, 6.}, {0.2826691278890675, 
             0.48266912788906746`}}, 
           "Frame" -> {{False, False}, {False, False}}, 
           "AxesOrigin" -> {0, 0.2826691278890681}, 
           "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
           "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
           "DefaultStyle" -> {
             Directive[
              PointSize[0.012833333333333334`], 
              AbsoluteThickness[2], 
              RGBColor[1, 0, 0]]}, 
           "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {{{}, {}, 
              Annotation[{
                Hue[0.67, 0.6, 0.6], 
                Directive[
                 PointSize[0.012833333333333334`], 
                 RGBColor[0.24, 0.6, 0.8], 
                 AbsoluteThickness[2]], 
                
                Line[{{1., 0.44419195642312587`}, {2., 0.39342716140334}, {3.,
                  0.37859432285849637`}, {4., 0.38114842660792925`}, {5., 
                 0.3824524472800001}, {6., 0.3826111665844291}}]}, 
               "Charting`Private`Tag#1"]}, {
              Annotation[{
                Directive[
                 PointSize[0.012833333333333334`], 
                 AbsoluteThickness[2], 
                 RGBColor[1, 0, 0]], {
                 Point[{1., 0.44419195642312587`}], 
                 Point[{2., 0.39342716140334}], 
                 Point[{3., 0.37859432285849637`}], 
                 Point[{4., 0.38114842660792925`}], 
                 Point[{5., 0.3824524472800001}], 
                 Point[{6., 0.3826111665844291}]}}, 
               "Charting`Private`Tag#1"], {}}}, "GCFlag" -> True|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           ListPlot, "GroupHighlight" -> False|>|>],
       ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
        4.503599627370496*^15, -4.503599627370496*^15}}],
      Selectable->False]},
    Annotation[
     GraphicsComplex[{{1., 0.44419195642312587`}, {2., 0.39342716140334}, {3.,
       0.37859432285849637`}, {4., 0.38114842660792925`}, {5., 
      0.3824524472800001}, {6., 0.3826111665844291}, {1., 
      0.44419195642312587`}, {2., 0.39342716140334}, {3., 
      0.37859432285849637`}, {4., 0.38114842660792925`}, {5., 
      0.3824524472800001}, {6., 0.3826111665844291}}, {{{}, {}, 
        Annotation[{
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.012833333333333334`], 
           RGBColor[0.24, 0.6, 0.8], 
           AbsoluteThickness[2]], 
          Line[{1, 2, 3, 4, 5, 6}]}, "Charting`Private`Tag#1"]}, {
        Annotation[{
          Directive[
           PointSize[0.012833333333333334`], 
           AbsoluteThickness[2], 
           RGBColor[1, 0, 0]], 
          Point[{1, 2, 3, 4, 5, 6}]}, "Charting`Private`Tag#1"], {}}}], <|
     "HighlightElements" -> <|
       "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
      "LayoutOptions" -> <|
       "PanelPlotLayout" -> <||>, 
        "PlotRange" -> {{0, 6.}, {0.2826691278890675, 0.48266912788906746`}}, 
        "Frame" -> {{False, False}, {False, False}}, 
        "AxesOrigin" -> {0, 0.2826691278890681}, 
        "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
        "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
          Directive[
           PointSize[0.012833333333333334`], 
           AbsoluteThickness[2], 
           RGBColor[1, 0, 0]]}, 
        "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), 
          "ScalingFunctions" -> {{Identity, Identity}, {
            Identity, Identity}}|>, "Primitives" -> {{{}, {}, 
           Annotation[{
             Hue[0.67, 0.6, 0.6], 
             Directive[
              PointSize[0.012833333333333334`], 
              RGBColor[0.24, 0.6, 0.8], 
              AbsoluteThickness[2]], 
             
             Line[{{1., 0.44419195642312587`}, {2., 0.39342716140334}, {3., 
              0.37859432285849637`}, {4., 0.38114842660792925`}, {5., 
              0.3824524472800001}, {6., 0.3826111665844291}}]}, 
            "Charting`Private`Tag#1"]}, {
           Annotation[{
             Directive[
              PointSize[0.012833333333333334`], 
              AbsoluteThickness[2], 
              RGBColor[1, 0, 0]], {
              Point[{1., 0.44419195642312587`}], 
              Point[{2., 0.39342716140334}], 
              Point[{3., 0.37859432285849637`}], 
              Point[{4., 0.38114842660792925`}], 
              Point[{5., 0.3824524472800001}], 
              Point[{6., 0.3826111665844291}]}}, 
            "Charting`Private`Tag#1"], {}}}, "GCFlag" -> True|>, 
      "Meta" -> <|
       "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
        ListPlot, "GroupHighlight" -> False|>|>, 
     "DynamicHighlight"]], {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox[
     TagBox["\"N\"", HoldForm], TraditionalForm], 
    FormBox[
     TagBox["\"Integral Estimate\"", HoldForm], TraditionalForm]},
  AxesOrigin->{0, 0.2826691278890681},
  DisplayFunction->Identity,
  Epilog->{
    Dashing[{Small, Small}], 
    GrayLevel[0.5], 
    LineBox[{{1, 0.3826691278890675}, {6, 0.3826691278890675}}], 
    InsetBox[
     FormBox["\"Exact Value\"", TraditionalForm], {4.5, 0.4126691278890675}]},
  
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{Automatic, Automatic},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.24, 0.6, 0.8], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.95, 0.627, 0.1425], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.455, 0.7, 0.21], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.578, 0.51, 0.85], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.4, 0.64, 1.], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[1., 0.75, 0.], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.8, 0.4, 0.76], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.637, 0.65, 0.], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[2]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05], 
    "OptimizePlotMarkers" -> True, "IncludeHighlighting" -> "CurrentSet", 
    "HighlightStyle" -> Automatic, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox["\"Monte Carlo Convergence\"", TraditionalForm],
  PlotRange->{{0, 6.}, {0.2826691278890675, 0.48266912788906746`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.9612469641654243`*^9, 3.961269274274391*^9, 
  3.961269332733736*^9, 3.961270057289242*^9, 3.9612708137238827`*^9, 
  3.9612708787080517`*^9},
 CellLabel->
  "Out[133]=",ExpressionUUID->"2182bd7e-5482-7741-8c88-4d90b2cb9d67"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.9612680007299557`*^9, 3.961268000767807*^9}, {
  3.961270864728777*^9, 
  3.961270865168188*^9}},ExpressionUUID->"b3ae4fec-c360-9f4f-bc3d-\
c3853d655606"],

Cell["", "Text",ExpressionUUID->"aaea0a4b-36a8-cf42-918b-eb2dacc530cc"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Exercise 3. Classical physics.", "Section",
 CellChangeTimes->{{3.928387180304728*^9, 3.92838718882333*^9}, {
  3.928388244625062*^9, 
  3.9283882514072037`*^9}},ExpressionUUID->"80c70c9a-41a3-44ec-ab71-\
a756cbf81fa8"],

Cell[TextData[{
 "Solve the differential equation for the motion of a projectile launched \
from the surface of a spherical planet (without atmosphere) of mass ",
 StyleBox["M",
  FontWeight->"Bold"],
 " and radius ",
 StyleBox["R",
  FontWeight->"Bold"],
 ". The equations should be solved for the coordinates x  and y with the \
origin at the center of the planet. Stop the integration when the projectile \
hits the ground (you can use the command ",
 StyleBox["WhenEvent ",
  FontWeight->"Bold"],
 "inside",
 StyleBox[" NDSolve",
  FontWeight->"Bold"],
 "). Assign as initial conditions on the surface  an initial angle \[Theta] \
(wrt the local horizontal), and an initial velocity v0. Plot the planet and \
the path. Vary \[Theta] between 30 and 90 degrees in steps of, e.g., 10 \
degrees, and use ",
 StyleBox["Manipulate",
  FontWeight->"Bold"],
 " to show the various trajectories.  Use the constants defined below.\n",
 StyleBox["Hint: ",
  FontSlant->"Italic"],
 "if you use ",
 StyleBox["WhenEvent",
  FontWeight->"Bold"],
 ", and ",
 StyleBox["r[t]",
  FontWeight->"Bold"],
 " is the position vector, you might use this syntax to stop the integration \
when hitting the ground:\n",
 StyleBox["WhenEvent[Norm[r[t]]<R \
,{tfin=t,\[CloseCurlyDoubleQuote]StopIntegration\[CloseCurlyDoubleQuote]}]\n",
  
  FontWeight->"Bold"],
 "then the integration stops and ",
 StyleBox["tfin",
  FontWeight->"Bold"],
 " is the stopping time needed to draw the plots."
}], "Text",
 CellChangeTimes->{{3.9283878624173403`*^9, 3.9283881735424137`*^9}, {
   3.928575290167548*^9, 3.9285753011080303`*^9}, {3.960870749111624*^9, 
   3.9608709351163797`*^9}, {3.9608710681642113`*^9, 
   3.9608710734330587`*^9}, {3.9608725283769693`*^9, 3.960872540289901*^9}, 
   3.960872703244854*^9, {3.9608732917780733`*^9, 3.960873297782505*^9}, {
   3.960873423507638*^9, 3.960873468645735*^9}, {3.9608738385066347`*^9, 
   3.960873889605151*^9}, {3.960874842282811*^9, 3.9608749002609873`*^9}, {
   3.960875000512229*^9, 3.9608750010577803`*^9}, {3.96088017216437*^9, 
   3.9608801791772013`*^9}, {3.961033783029716*^9, 3.961033805137858*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"372ac9b1-4c91-4d79-9da5-e5873a3061c5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "Constants", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"gG", "=", 
     RowBox[{"6.67430", "*", 
      RowBox[{"10", "^", 
       RowBox[{"-", "11"}]}]}]}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{"gravitational", " ", 
     RowBox[{"constant", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"m", "^", "3"}], "/", "kg"}], "/", 
       RowBox[{"s", "^", "2"}]}], "]"}]}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"mM", "=", 
     RowBox[{"5.972", "*", 
      RowBox[{"10", "^", "24"}]}]}], ";"}], "     ", 
   RowBox[{"(*", 
    RowBox[{"mass", " ", "of", " ", "planet", " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"e", ".", "g", "."}], ",", "Earth"}], ")"}], "[", "kg", 
      "]"}]}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"rR", "=", 
     RowBox[{"6.371", "*", 
      RowBox[{"10", "^", "6"}]}]}], ";"}], "      ", 
   RowBox[{"(*", 
    RowBox[{"radius", " ", "of", " ", "planet", " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"e", ".", "g", "."}], ",", "Earth"}], ")"}], "[", "m", 
      "]"}]}], "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Initial", " ", "velocity"}], ",", " ", "angle", ",", " ", 
     RowBox[{"and", " ", "position"}]}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"v0", "=", "8000"}], ";"}], "           ", 
   RowBox[{"(*", 
    RowBox[{"initial", " ", 
     RowBox[{"speed", "[", 
      RowBox[{"m", "/", "s"}], "]"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"theta", "=", 
     RowBox[{"45", " ", "Degree"}]}], ";"}], "   ", 
   RowBox[{"(*", 
    RowBox[{
    "launch", " ", "angle", " ", "from", " ", "local", " ", "horizontal"}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"r0", "=", 
     RowBox[{"{", 
      RowBox[{"R", ",", "0"}], "}"}]}], ";"}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
     "defines", " ", "a", " ", "vector", " ", "in", " ", "Cartesian", " ", 
      "coordinates"}], ",", 
     RowBox[{
     "pointing", " ", "from", " ", "center", " ", "of", " ", "planet", " ", 
      "to", " ", "launch", " ", "point", " ", "on", " ", "the", " ", 
      "surface"}]}], "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.960870018610509*^9, 3.960870018614203*^9}, {
   3.96087015075739*^9, 3.9608701717084*^9}, {3.9608702314375896`*^9, 
   3.960870239340764*^9}, {3.960870286324108*^9, 3.960870309006546*^9}, {
   3.960870372198838*^9, 3.960870416125156*^9}, {3.960870592112499*^9, 
   3.9608706473303328`*^9}, {3.960870697703732*^9, 3.9608707240512123`*^9}, 
   3.960870915363584*^9, {3.960871024582802*^9, 3.9608710381166687`*^9}, {
   3.9608727156951427`*^9, 3.9608727548034782`*^9}, {3.9608731601167707`*^9, 
   3.960873240274618*^9}, {3.960874915707164*^9, 3.960874934822267*^9}, {
   3.9612668327023144`*^9, 3.9612668375761585`*^9}, {3.961267879964281*^9, 
   3.9612678801198273`*^9}},
 CellLabel->
  "In[134]:=",ExpressionUUID->"815fea1b-b84f-44f6-97b2-47fc441c6300"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}], ";"}], "\n", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", "Constants", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"gG", "=", 
    RowBox[{"6.67430", "*", 
     RowBox[{"10", "^", 
      RowBox[{"-", "11"}]}]}]}], ";"}], "   ", 
  RowBox[{"(*", 
   RowBox[{"Gravitational", " ", 
    RowBox[{"constant", "[", 
     RowBox[{
      RowBox[{"m\.b3", "/", "kg"}], "/", "s\.b2"}], "]"}]}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"mM", "=", 
    RowBox[{"5.972", "*", 
     RowBox[{"10", "^", "24"}]}]}], ";"}], "      ", 
  RowBox[{"(*", 
   RowBox[{"Mass", " ", "of", " ", "planet", " ", 
    RowBox[{
     RowBox[{"(", "Earth", ")"}], "[", "kg", "]"}]}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"rR", "=", 
    RowBox[{"6.371", "*", 
     RowBox[{"10", "^", "6"}]}]}], ";"}], "       ", 
  RowBox[{"(*", 
   RowBox[{"Radius", " ", "of", " ", "planet", " ", 
    RowBox[{
     RowBox[{"(", "Earth", ")"}], "[", "m", "]"}]}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"v0", "=", "8000"}], ";"}], "             ", 
  RowBox[{"(*", 
   RowBox[{"Initial", " ", 
    RowBox[{"velocity", "[", 
     RowBox[{"m", "/", "s"}], "]"}]}], "*)"}], "\n", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "Main", " ", "function", " ", "to", " ", "compute", " ", "trajectory"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"computeTrajectory", "[", "thetaDeg_", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "thetaRad", ",", "pos0", ",", "vel0", ",", "sol", ",", "tmax", ",", 
        "xfunc", ",", "yfunc", ",", "trajectory"}], "}"}], ",", 
      RowBox[{
       RowBox[{"thetaRad", "=", 
        RowBox[{"thetaDeg", "*", "Degree"}]}], ";", 
       RowBox[{"(*", 
        RowBox[{"Convert", " ", "angle", " ", "to", " ", "radians"}], "*)"}], 
       
       RowBox[{"(*", 
        RowBox[{"Initial", " ", 
         RowBox[{"conditions", ":", 
          RowBox[{"position", " ", 
           RowBox[{"(", "surface", ")"}], " ", "and", " ", "velocity", " ", 
           "components"}]}]}], "*)"}], 
       RowBox[{"pos0", "=", 
        RowBox[{"{", 
         RowBox[{"rR", ",", "0"}], "}"}]}], ";", 
       RowBox[{"(*", 
        RowBox[{"Launch", " ", "from", " ", 
         RowBox[{"(", 
          RowBox[{"R", ",", "0"}], ")"}], " ", "in", " ", "rectangular", " ", 
         "coordinates"}], "*)"}], 
       RowBox[{"vel0", "=", 
        RowBox[{"v0", "*", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Sin", "[", "thetaRad", "]"}], ",", 
           RowBox[{"Cos", "[", "thetaRad", "]"}]}], "}"}]}]}], ";", 
       RowBox[{"(*", 
        RowBox[{"{", 
         RowBox[{"radial", ",", "tangential"}], "}"}], "*)"}], 
       RowBox[{"(*", 
        RowBox[{
        "Solve", " ", "ODE", " ", "with", " ", "WhenEvent", " ", "to", " ", 
         "detect", " ", "reaching", " ", "the", " ", 
         RowBox[{"Earth", "'"}], "s", " ", "surface", "\"\<\>"}], "*)"}], 
       RowBox[{"sol", "=", 
        RowBox[{"First", "@", 
         RowBox[{"NDSolve", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"x", "''"}], "[", "t", "]"}], "==", 
              RowBox[{
               RowBox[{"-", "gG"}], "*", "mM", "*", 
               RowBox[{
                RowBox[{"x", "[", "t", "]"}], "/", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"x", "[", "t", "]"}], "^", "2"}], "+", 
                   RowBox[{
                    RowBox[{"y", "[", "t", "]"}], "^", "2"}]}], ")"}], "^", 
                 RowBox[{"(", 
                  RowBox[{"3", "/", "2"}], ")"}]}]}]}]}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"y", "''"}], "[", "t", "]"}], "==", 
              RowBox[{
               RowBox[{"-", "gG"}], "*", "mM", "*", 
               RowBox[{
                RowBox[{"y", "[", "t", "]"}], "/", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"x", "[", "t", "]"}], "^", "2"}], "+", 
                   RowBox[{
                    RowBox[{"y", "[", "t", "]"}], "^", "2"}]}], ")"}], "^", 
                 RowBox[{"(", 
                  RowBox[{"3", "/", "2"}], ")"}]}]}]}]}], ",", 
             RowBox[{
              RowBox[{"x", "[", "0", "]"}], "==", 
              RowBox[{"pos0", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], ",", 
             RowBox[{
              RowBox[{"y", "[", "0", "]"}], "==", 
              RowBox[{"pos0", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"x", "'"}], "[", "0", "]"}], "==", 
              RowBox[{"vel0", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"y", "'"}], "[", "0", "]"}], "==", 
              RowBox[{"vel0", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], ",", 
             RowBox[{"WhenEvent", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"Norm", "[", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"x", "[", "t", "]"}], ",", 
                    RowBox[{"y", "[", "t", "]"}]}], "}"}], "]"}], "<=", 
                 "rR"}], "&&", 
                RowBox[{"t", ">", "0"}]}], ",", "\"\<StopIntegration\>\""}], 
              "]"}]}], "  ", 
            RowBox[{"(*", 
             RowBox[{
             "Stop", " ", "when", " ", "projectile", " ", "hits", " ", 
              "surface"}], "*)"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"x", ",", "y"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"t", ",", "0", ",", "100000"}], "}"}]}], "]"}]}]}], ";", 
       RowBox[{"(*", 
        RowBox[{
        "Max", " ", "time", " ", "for", " ", "escape", " ", "trajectories"}], 
        "*)"}], 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"xfunc", ",", "yfunc"}], "}"}], "=", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"x", ",", "y"}], "}"}], "/.", " ", "sol"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"tmax", "=", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"x", "/.", " ", "sol"}], ")"}], "[", "\"\<Domain\>\"", 
          "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "2"}], "]"}], "]"}]}], ";", 
       RowBox[{"(*", 
        RowBox[{"Get", " ", "stopping", " ", "time"}], "*)"}], 
       RowBox[{"(*", 
        RowBox[{"Create", " ", "trajectory", " ", "plot"}], "*)"}], 
       RowBox[{"trajectory", "=", 
        RowBox[{"ParametricPlot", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"xfunc", "[", "t", "]"}], ",", 
            RowBox[{"yfunc", "[", "t", "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"t", ",", "0", ",", "tmax"}], "}"}], ",", 
          RowBox[{"PlotStyle", "->", 
           RowBox[{
            RowBox[{"ColorData", "[", "97", "]"}], "[", "thetaDeg", "]"}]}], ",", 
          RowBox[{"PlotRange", "->", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "2"}], " ", "rR"}], ",", 
               RowBox[{"2", " ", "rR"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "2"}], " ", "rR"}], ",", 
               RowBox[{"2", " ", "rR"}]}], "}"}]}], "}"}]}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"trajectory", ",", "tmax"}], "}"}]}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", "\n", 
  RowBox[{"(*", 
   RowBox[{"Generate", " ", "planet", " ", "graphic"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"planet", "=", 
    RowBox[{"Graphics", "[", 
     RowBox[{"{", 
      RowBox[{"LightBlue", ",", 
       RowBox[{"Disk", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}], ",", "rR"}], "]"}], ",", 
       RowBox[{"(*", 
        RowBox[{"Planet", " ", "surface"}], "*)"}], "Gray", ",", 
       RowBox[{"Circle", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}], ",", "rR"}], "]"}]}], "      ", 
      RowBox[{"(*", "Outline", "*)"}], "}"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", "\n", 
  RowBox[{"(*", 
   RowBox[{"Interactive", " ", "visualization"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"result", ",", "trajectory"}], "}"}], ",", 
     RowBox[{
      RowBox[{"result", "=", 
       RowBox[{"computeTrajectory", "[", "thetaDeg", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"trajectory", "=", 
       RowBox[{"First", "[", "result", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Show", "[", 
       RowBox[{"planet", ",", "trajectory", ",", 
        RowBox[{"PlotRange", "->", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "2"}], " ", "rR"}], ",", 
             RowBox[{"2", " ", "rR"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "2"}], " ", "rR"}], ",", 
             RowBox[{"2", " ", "rR"}]}], "}"}]}], "}"}]}], ",", 
        RowBox[{"Frame", "->", "True"}], ",", 
        RowBox[{"Axes", "->", "False"}], ",", 
        RowBox[{"ImageSize", "->", "500"}], ",", 
        RowBox[{"PlotLabel", "->", 
         RowBox[{"Style", "[", 
          RowBox[{
           RowBox[{"StringForm", "[", 
            RowBox[{"\"\<Launch angle: ``\[Degree]\>\"", ",", "thetaDeg"}], 
            "]"}], ",", "16", ",", "Black"}], "]"}]}], ",", 
        RowBox[{"AspectRatio", "->", "1"}]}], "]"}]}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"thetaDeg", ",", "30", ",", "90", ",", "10"}], "}"}], ",", 
   RowBox[{"(*", 
    RowBox[{"Launch", " ", "angle", " ", "control"}], "*)"}], 
   RowBox[{"ControlPlacement", "->", "Top"}], ",", 
   RowBox[{"TrackedSymbols", ":>", 
    RowBox[{"{", "thetaDeg", "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{
  3.9612678884393196`*^9, {3.9612680385944767`*^9, 3.961268047591379*^9}, {
   3.961270916618849*^9, 3.9612709182793064`*^9}, {3.961270956496908*^9, 
   3.9612709719466324`*^9}},
 CellLabel->
  "In[140]:=",ExpressionUUID->"1faa8bac-8474-f340-ad6c-f6842515b616"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`thetaDeg$$ = 80, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`thetaDeg$$], 30, 90, 10, ControlType -> Manipulator}},
     Typeset`size$$ = {500., {243.88514539930554`, 249.61707899305554`}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = True, 
    Typeset`keyframeActionsQ$$ = False, Typeset`keyframeList$$ = {}}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`thetaDeg$$ = 30}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$, Typeset`keyframeActionsQ$$, 
        Typeset`keyframeList$$}, "Body" :> 
      Module[{$CellContext`result$, $CellContext`trajectory$}, \
$CellContext`result$ = \
$CellContext`computeTrajectory[$CellContext`thetaDeg$$]; \
$CellContext`trajectory$ = First[$CellContext`result$]; 
        Show[$CellContext`planet, $CellContext`trajectory$, 
          PlotRange -> {{(-2) $CellContext`rR, 
             2 $CellContext`rR}, {(-2) $CellContext`rR, 2 $CellContext`rR}}, 
          Frame -> True, Axes -> False, ImageSize -> 500, PlotLabel -> Style[
            StringForm["Launch angle: ``\[Degree]", $CellContext`thetaDeg$$], 
            16, Black], AspectRatio -> 1]], 
      "Specifications" :> {{$CellContext`thetaDeg$$, 30, 90, 10}}, 
      "Options" :> {
       ControlPlacement -> Top, TrackedSymbols :> {$CellContext`thetaDeg$$}}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{
      545.0999999999999, {285.09598524305557`, 290.82791883680557`}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.961267894395708*^9, 3.9612709940227375`*^9},
 CellLabel->
  "Out[147]=",ExpressionUUID->"80d9015f-abe1-b543-a581-baf448266a26"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{949, 466.5},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"14.2 for Microsoft Windows (64-bit) (March 14, 2025)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"1cf3d5dd-755e-7744-9648-aa1cadd45b9c"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 232, 4, 96, "Title",ExpressionUUID->"4b6e0e64-7686-4179-b65e-112f36226deb"],
Cell[815, 28, 480, 7, 144, "Text",ExpressionUUID->"4651040e-0424-4f21-ad23-9be99aa84d59"],
Cell[CellGroupData[{
Cell[1320, 39, 279, 4, 66, "Section",ExpressionUUID->"e1e40ff8-d40a-4b2c-885e-91fc55dff3e5"],
Cell[1602, 45, 1416, 36, 137, "Text",ExpressionUUID->"334fc778-5318-4979-93b7-08d42a8797a6"],
Cell[CellGroupData[{
Cell[3043, 85, 5703, 144, 427, "Input",ExpressionUUID->"853b56c7-e3e7-4b4a-9f40-fad211508f43"],
Cell[8749, 231, 123561, 2149, 228, "Output",ExpressionUUID->"530eae46-62d1-d04c-96e9-ba6680ef53b3"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[132359, 2386, 309, 5, 66, "Section",ExpressionUUID->"d8dc5952-2301-4e6e-b55d-76b97ca5b9bd"],
Cell[132671, 2393, 1825, 36, 224, "Text",ExpressionUUID->"58c97fbb-df94-4924-afce-aad8cbab2d61"],
Cell[134499, 2431, 791, 17, 28, "Input",ExpressionUUID->"1c400630-b82c-49a1-bf56-a5f749747e72"],
Cell[CellGroupData[{
Cell[135315, 2452, 10632, 287, 960, "Input",ExpressionUUID->"ad9f332c-c5b7-0749-8622-0ef925e5d5a5"],
Cell[145950, 2741, 28530, 520, 256, "Output",ExpressionUUID->"17feefe7-7efe-494c-9d4e-08510a24a630"],
Cell[CellGroupData[{
Cell[174505, 3265, 489, 11, 22, "Print",ExpressionUUID->"2958c0c7-0088-ac41-95d8-f0223caf885f"],
Cell[174997, 3278, 488, 11, 22, "Print",ExpressionUUID->"19500ca5-8a62-0a4c-921e-ee07a5888a02"]
}, Open  ]],
Cell[175500, 3292, 1976, 39, 307, "Output",ExpressionUUID->"a2cf48b0-6d5a-a84f-bb73-77b3044641ba"],
Cell[177479, 3333, 13691, 313, 274, "Output",ExpressionUUID->"2182bd7e-5482-7741-8c88-4d90b2cb9d67"]
}, Open  ]],
Cell[191185, 3649, 203, 4, 28, "Input",ExpressionUUID->"b3ae4fec-c360-9f4f-bc3d-c3853d655606"],
Cell[191391, 3655, 71, 0, 33, "Text",ExpressionUUID->"aaea0a4b-36a8-cf42-918b-eb2dacc530cc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[191499, 3660, 225, 4, 66, "Section",ExpressionUUID->"80c70c9a-41a3-44ec-ab71-a756cbf81fa8"],
Cell[191727, 3666, 2220, 52, 246, "Text",ExpressionUUID->"372ac9b1-4c91-4d79-9da5-e5873a3061c5"],
Cell[193950, 3720, 3132, 80, 275, "Input",ExpressionUUID->"815fea1b-b84f-44f6-97b2-47fc441c6300"],
Cell[CellGroupData[{
Cell[197107, 3804, 10798, 289, 675, "Input",ExpressionUUID->"1faa8bac-8474-f340-ad6c-f6842515b616"],
Cell[207908, 4095, 2505, 48, 611, "Output",ExpressionUUID->"80d9015f-abe1-b543-a581-baf448266a26"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

